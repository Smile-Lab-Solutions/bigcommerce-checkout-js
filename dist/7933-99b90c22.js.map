{"version":3,"file":"7933-99b90c22.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/form/Label/Label.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/ManageAccountInstrumentsTable/ManageAccountInstrumentsTable.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/ManageAchInstrumentsTable/ManageAchInstrumentsTable.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/ManageCardInstrumentsTable/ManageCardInstrumentsTable.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/ManageInstrumentsAlert/ManageInstrumentsAlert.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/ManageInstrumentsModal/ManageInstrumentsModal.tsx","webpack://checkout/./packages/ui/src/form/Input/Input.tsx","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/form/CheckboxFormField/CheckboxFormField.tsx","webpack://checkout/./packages/ui/src/icon/IconClose.tsx","webpack://checkout/./packages/ui/src/modal/Modal.tsx","webpack://checkout/./packages/ui/src/form/Fieldset/Fieldset.tsx","webpack://checkout/./packages/ui/src/form/FormFieldError/FormFieldError.tsx","webpack://checkout/./packages/ui/src/modal/ModalTrigger.tsx","webpack://checkout/./packages/ui/src/form/Legend/Legend.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/InstrumentStorageField/InstrumentStorageField.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/InstrumentStoreAsDefaultField/InstrumentStoreAsDefaultField.tsx","webpack://checkout/./packages/instrument-utils/src/storedInstrument/StoreInstrumentFieldset/StoreInstrumentFieldset.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isCardInstrument/isCardInstrument.ts","webpack://checkout/./packages/ui/src/icon/IconPaypal.tsx","webpack://checkout/./packages/ui/src/dropdown/DropdownTrigger.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isAchInstrument/isAchInstrument.ts","webpack://checkout/./packages/instrument-utils/src/guards/isBankInstrument/isBankInstrument.ts","webpack://checkout/./packages/ui/src/icon/IconError.tsx","webpack://checkout/./packages/ui/src/icon/IconSuccess.tsx","webpack://checkout/./packages/ui/src/icon/IconInfo.tsx","webpack://checkout/./packages/ui/src/alert/Alert.tsx","webpack://checkout/./packages/ui/src/form/CheckboxInput/CheckboxInput.tsx","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isAccountInstrument/isAccountInstrument.ts","webpack://checkout/./packages/instrument-utils/src/guards/isSepaInstrument/isSepaInstrument.ts","webpack://checkout/./packages/ui/src/modal/ModalHeader.tsx","webpack://checkout/./packages/ui/src/icon/IconAch.tsx","webpack://checkout/./packages/ui/src/form/FormFieldContainer/FormFieldContainer.tsx","webpack://checkout/./packages/payment-integration-api/src/CheckoutRootWrapperIds.ts","webpack://checkout/./packages/ui/src/form/BasicFormField/BasicFormField.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        {...rest}\n        className={classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        )}\n        data-test={testId}\n    >\n        {children}\n    </label>\n);\n\nexport default Label;\n","import { type AccountInstrument, type BankInstrument } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { IconPaypal, IconSize, LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nimport { isAchInstrument, isBankAccountInstrument, isSepaInstrument } from '../../guards';\n\ninterface ManageInstrumentsRowProps {\n    instrument: AccountInstrument;\n    onDeleteInstrument(id: string): void;\n}\n\nconst ManageInstrumentsRow: FunctionComponent<ManageInstrumentsRowProps> = ({\n    instrument,\n    onDeleteInstrument,\n}) => {\n    const handleDelete = useCallback(() => {\n        onDeleteInstrument(instrument.bigpayToken);\n    }, [instrument, onDeleteInstrument]);\n\n    return (\n        <tr>\n            <td data-test=\"manage-instrument-accountExternalId\">\n                {isBankAccountInstrument(instrument) || isAchInstrument(instrument) ? (\n                    <span className=\"instrumentModal-instrumentAccountNumber\">\n                        {isSepaInstrument(instrument) ? (\n                            <TranslatedString id=\"payment.sepa_account_number\" />\n                        ) : (\n                            <TranslatedString id=\"payment.instrument_manage_table_header_ending_in_text\" />\n                        )}\n                        {` ${instrument.accountNumber}`}\n                    </span>\n                ) : (\n                    <>\n                        <IconPaypal additionalClassName=\"accountIcon-icon\" size={IconSize.Medium} />\n                        <span className=\"instrumentModal-instrumentAccountExternalId\">\n                            {instrument.externalId}\n                        </span>\n                    </>\n                )}\n            </td>\n            <td>\n                <button\n                    className=\"button button--tiny table-actionButton optimizedCheckout-buttonSecondary\"\n                    data-test=\"manage-instrument-delete-button\"\n                    onClick={handleDelete}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.delete_action\" />\n                </button>\n            </td>\n        </tr>\n    );\n};\n\nexport interface ManageAccountInstrumentsTableProps {\n    instruments: Array<AccountInstrument | BankInstrument>;\n    isDeletingInstrument: boolean;\n    onDeleteInstrument(id: string): void;\n}\n\nconst ManageInstrumentsTable: FunctionComponent<ManageAccountInstrumentsTableProps> = ({\n    instruments,\n    isDeletingInstrument,\n    onDeleteInstrument,\n}) => {\n    if (instruments.length === 0) {\n        return (\n            <p>\n                <TranslatedString id=\"payment.instrument_manage_modal_empty_text\" />\n            </p>\n        );\n    }\n\n    return (\n        <LoadingOverlay isLoading={isDeletingInstrument}>\n            <table className=\"table\" data-test=\"manage-instruments-table\">\n                <thead className=\"table-thead\">\n                    <tr>\n                        <th>\n                            <TranslatedString id=\"payment.instrument_manage_table_header_payment_method_text\" />\n                        </th>\n                        <th />\n                    </tr>\n                </thead>\n\n                <tbody className=\"table-tbody\">\n                    {instruments.map((instrument) => (\n                        <ManageInstrumentsRow\n                            instrument={instrument}\n                            key={instrument.bigpayToken}\n                            onDeleteInstrument={onDeleteInstrument}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </LoadingOverlay>\n    );\n};\n\nexport default memo(ManageInstrumentsTable);\n","import { type AchInstrument } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { IconAch, IconSize, LoadingOverlay } from '@bigcommerce/checkout/ui';\n\ninterface ManageInstrumentsRowProps {\n    instrument: AchInstrument;\n    onDeleteInstrument(id: string): void;\n}\n\nconst ManageInstrumentsRow: FunctionComponent<ManageInstrumentsRowProps> = ({\n    instrument,\n    onDeleteInstrument,\n}) => {\n    const handleDelete = useCallback(() => {\n        onDeleteInstrument(instrument.bigpayToken);\n    }, [instrument, onDeleteInstrument]);\n\n    return (\n        <tr>\n            <td data-test=\"manage-instrument-bankType\">\n                <IconAch size={IconSize.Medium} />\n            </td>\n            <td data-test=\"manage-instrument-accountNumber\">{instrument.accountNumber}</td>\n            <td data-test=\"manage-instrument-issuer\">{instrument.issuer}</td>\n            <td>\n                <button\n                    className=\"button button--tiny table-actionButton optimizedCheckout-buttonSecondary\"\n                    data-test=\"manage-instrument-delete-button\"\n                    onClick={handleDelete}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.delete_action\" />\n                </button>\n            </td>\n        </tr>\n    );\n};\n\nexport interface ManageAchInstrumentsTableProps {\n    instruments: AchInstrument[];\n    isDeletingInstrument: boolean;\n    onDeleteInstrument(id: string): void;\n}\n\nconst ManageAchInstrumentsTable: FunctionComponent<ManageAchInstrumentsTableProps> = ({\n    instruments,\n    isDeletingInstrument,\n    onDeleteInstrument,\n}) => {\n    if (instruments.length === 0) {\n        return (\n            <p>\n                <TranslatedString id=\"payment.instrument_manage_modal_empty_text\" />\n            </p>\n        );\n    }\n\n    return (\n        <LoadingOverlay isLoading={isDeletingInstrument}>\n            <table className=\"table\" data-test=\"manage-ach-instruments-table\">\n                <thead className=\"table-thead\">\n                    <tr>\n                        <th>\n                            <TranslatedString id=\"payment.instrument_manage_table_header_payment_method_text\" />\n                        </th>\n                        <th>\n                            <TranslatedString id=\"payment.instrument_manage_table_header_ending_in_text\" />\n                        </th>\n                        <th>\n                            <TranslatedString id=\"payment.instrument_manage_table_header_routing_number_text\" />\n                        </th>\n                        <th />\n                    </tr>\n                </thead>\n\n                <tbody className=\"table-tbody\">\n                    {instruments.map((instrument) => (\n                        <ManageInstrumentsRow\n                            instrument={instrument}\n                            key={instrument.bigpayToken}\n                            onDeleteInstrument={onDeleteInstrument}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </LoadingOverlay>\n    );\n};\n\nexport default ManageAchInstrumentsTable;\n","import { type CardInstrument } from '@bigcommerce/checkout-sdk';\nimport { expirationDate } from 'card-validator';\nimport classNames from 'classnames';\nimport creditCardType from 'credit-card-type';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CreditCardIcon, LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nfunction mapFromInstrumentCardType(type: string): string {\n    switch (type) {\n        case 'amex':\n        case 'american_express':\n            return 'american-express';\n\n        case 'diners':\n            return 'diners-club';\n\n        default:\n            return type;\n    }\n}\n\ninterface ManageInstrumentsRowProps {\n    instrument: CardInstrument;\n    onDeleteInstrument(id: string): void;\n}\n\nconst ManageInstrumentsRow: FunctionComponent<ManageInstrumentsRowProps> = ({\n    instrument,\n    onDeleteInstrument,\n}) => {\n    const cardType = mapFromInstrumentCardType(instrument.brand);\n    const cardInfo = creditCardType.getTypeInfo(cardType);\n    const isExpired = !expirationDate({\n        month: instrument.expiryMonth,\n        year: instrument.expiryYear,\n    }).isValid;\n\n    const handleDelete = useCallback(() => {\n        onDeleteInstrument(instrument.bigpayToken);\n    }, [instrument, onDeleteInstrument]);\n\n    return (\n        <tr>\n            <td data-test=\"manage-instrument-cardType\">\n                <CreditCardIcon cardType={cardType} />\n\n                {cardInfo && (\n                    <span className=\"instrumentModal-instrumentCardType\">{cardInfo.niceType}</span>\n                )}\n            </td>\n            <td data-test=\"manage-instrument-last4\">{instrument.last4}</td>\n            <td\n                className={classNames({ 'instrumentModal-instrumentExpiry--expired': isExpired })}\n                data-test=\"manage-instrument-expiry\"\n            >\n                {`${instrument.expiryMonth}/${instrument.expiryYear}`}\n            </td>\n            <td>\n                <button\n                    className=\"button button--tiny table-actionButton optimizedCheckout-buttonSecondary\"\n                    data-test=\"manage-instrument-delete-button\"\n                    onClick={handleDelete}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.delete_action\" />\n                </button>\n            </td>\n        </tr>\n    );\n};\n\nexport interface ManageCardInstrumentsTableProps {\n    instruments: CardInstrument[];\n    isDeletingInstrument: boolean;\n    onDeleteInstrument(id: string): void;\n}\n\nconst ManageCardInstrumentsTable: FunctionComponent<ManageCardInstrumentsTableProps> = ({\n    instruments,\n    isDeletingInstrument,\n    onDeleteInstrument,\n}) => {\n    if (instruments.length === 0) {\n        return (\n            <p>\n                <TranslatedString id=\"payment.instrument_manage_modal_empty_text\" />\n            </p>\n        );\n    }\n\n    return (\n        <LoadingOverlay isLoading={isDeletingInstrument}>\n            <table className=\"table\" data-test=\"manage-card-instruments-table\">\n                <thead className=\"table-thead\">\n                    <tr>\n                        <th>\n                            <TranslatedString id=\"payment.instrument_manage_table_header_payment_method_text\" />\n                        </th>\n                        <th>\n                            <TranslatedString id=\"payment.instrument_manage_table_header_ending_in_text\" />\n                        </th>\n                        <th>\n                            <TranslatedString id=\"payment.instrument_manage_table_header_expiry_date_text\" />\n                        </th>\n                        <th />\n                    </tr>\n                </thead>\n\n                <tbody className=\"table-tbody\">\n                    {instruments.map((instrument) => (\n                        <ManageInstrumentsRow\n                            instrument={instrument}\n                            key={instrument.bigpayToken}\n                            onDeleteInstrument={onDeleteInstrument}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </LoadingOverlay>\n    );\n};\n\nexport default memo(ManageCardInstrumentsTable);\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { Alert, AlertType } from '@bigcommerce/checkout/ui';\n\nexport interface ManageInstrumentsAlertProps {\n    error: any; // TODO: Fix typing\n}\n\nconst ManageInstrumentsAlert: FunctionComponent<ManageInstrumentsAlertProps> = ({ error }) => {\n    const { status } = error;\n\n    if (status === 401) {\n        return (\n            <Alert type={AlertType.Error}>\n                <TranslatedString id=\"payment.instrument_manage_delete_auth_error\" />\n            </Alert>\n        );\n    }\n\n    if (status >= 400 && status < 500) {\n        return (\n            <Alert type={AlertType.Error}>\n                <TranslatedString id=\"payment.instrument_manage_delete_client_error\" />\n            </Alert>\n        );\n    }\n\n    return (\n        <Alert type={AlertType.Error}>\n            <TranslatedString id=\"payment.instrument_manage_delete_server_error\" />\n        </Alert>\n    );\n};\n\nexport default memo(ManageInstrumentsAlert);\n","import { type PaymentInstrument } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, useState } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { Button, ButtonSize, ButtonVariant, Modal, ModalHeader } from '@bigcommerce/checkout/ui';\n\nimport {\n    isAccountInstrument,\n    isAchInstrument,\n    isBankAccountInstrument,\n    isCardInstrument,\n} from '../../guards';\nimport { ManageAccountInstrumentsTable } from '../ManageAccountInstrumentsTable';\nimport { ManageAchInstrumentsTable } from '../ManageAchInstrumentsTable';\nimport { ManageCardInstrumentsTable } from '../ManageCardInstrumentsTable';\nimport { ManageInstrumentsAlert } from '../ManageInstrumentsAlert';\n\nexport interface ManageInstrumentsModalProps {\n    isOpen: boolean;\n    instruments: PaymentInstrument[];\n    onAfterOpen?(): void;\n    onDeleteInstrument?(instrumentId: string): void;\n    onDeleteInstrumentError?(error: Error): void;\n    onRequestClose?(): void;\n}\n\nconst ManageInstrumentsModal = ({\n    isOpen,\n    instruments,\n    onAfterOpen,\n    onDeleteInstrument = noop,\n    onDeleteInstrumentError = noop,\n    onRequestClose,\n}: ManageInstrumentsModalProps): ReactElement => {\n    const [isConfirmingDelete, setIsConfirmingDelete] = useState(false);\n    const [selectedInstrumentId, setSelectedInstrumentId] = useState<string | undefined>();\n\n    const {\n        checkoutState: {\n            errors: { getDeleteInstrumentError },\n            statuses: { isDeletingInstrument, isLoadingInstruments },\n        },\n        checkoutService: { deleteInstrument, clearError },\n    } = useCheckout();\n\n    const deleteInstrumentError = getDeleteInstrumentError();\n\n    const handleAfterOpen = (): void => {\n        setIsConfirmingDelete(false);\n        onAfterOpen?.();\n    };\n\n    const handleCancel = (): void => {\n        const existingError = getDeleteInstrumentError();\n\n        if (existingError) {\n            void clearError(existingError);\n        }\n\n        setIsConfirmingDelete(false);\n    };\n\n    const handleConfirmDelete = async (): Promise<void> => {\n        if (!selectedInstrumentId) {\n            return;\n        }\n\n        try {\n            await deleteInstrument(selectedInstrumentId);\n            onDeleteInstrument(selectedInstrumentId);\n            onRequestClose?.();\n        } catch (error) {\n            const err = error instanceof Error ? error : new Error(String(error));\n\n            onDeleteInstrumentError(err);\n        }\n    };\n\n    const handleDeleteInstrument = (id: string): void => {\n        setIsConfirmingDelete(true);\n        setSelectedInstrumentId(id);\n    };\n\n    const ModalContent = () => {\n        if (isConfirmingDelete) {\n            return (\n                <p>\n                    <TranslatedString id=\"payment.instrument_manage_modal_confirmation_label\" />\n                </p>\n            );\n        }\n\n        const cardInstruments = instruments.filter(isCardInstrument);\n        const bankInstruments = instruments.filter(isBankAccountInstrument);\n        const accountInstruments = instruments.filter(isAccountInstrument);\n        const achInstrument = instruments.filter(isAchInstrument);\n\n        if (achInstrument.length) {\n            return (\n                <ManageAchInstrumentsTable\n                    instruments={achInstrument}\n                    isDeletingInstrument={isDeletingInstrument()}\n                    onDeleteInstrument={handleDeleteInstrument}\n                />\n            );\n        }\n\n        const bankAndAccountInstruments = [...bankInstruments, ...accountInstruments];\n\n        if (bankAndAccountInstruments.length) {\n            return (\n                <ManageAccountInstrumentsTable\n                    instruments={bankAndAccountInstruments}\n                    isDeletingInstrument={isDeletingInstrument()}\n                    onDeleteInstrument={handleDeleteInstrument}\n                />\n            );\n        }\n\n        return (\n            <ManageCardInstrumentsTable\n                instruments={cardInstruments}\n                isDeletingInstrument={isDeletingInstrument()}\n                onDeleteInstrument={handleDeleteInstrument}\n            />\n        );\n    };\n\n    const ConfirmDelete = () => (\n        <>\n            <Button\n                onClick={handleCancel}\n                size={ButtonSize.Small}\n                testId=\"manage-instrument-cancel-button\"\n            >\n                <TranslatedString id=\"common.cancel_action\" />\n            </Button>\n\n            <Button\n                disabled={isDeletingInstrument() || isLoadingInstruments()}\n                onClick={handleConfirmDelete}\n                size={ButtonSize.Small}\n                testId=\"manage-instrument-confirm-button\"\n                variant={ButtonVariant.Primary}\n            >\n                <TranslatedString id=\"payment.instrument_manage_modal_confirmation_action\" />\n            </Button>\n        </>\n    );\n    const CloseButton = () => (\n        <Button\n            onClick={onRequestClose}\n            size={ButtonSize.Small}\n            testId=\"manage-instrument-close-button\"\n        >\n            <TranslatedString id=\"common.close_action\" />\n        </Button>\n    );\n\n    return (\n        <Modal\n            closeButtonLabel={<TranslatedString id=\"common.close_action\" />}\n            footer={isConfirmingDelete ? <ConfirmDelete /> : <CloseButton />}\n            header={\n                <ModalHeader>\n                    <TranslatedString id=\"payment.instrument_manage_modal_title_text\" />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onAfterOpen={handleAfterOpen}\n            onRequestClose={onRequestClose}\n        >\n            {deleteInstrumentError && <ManageInstrumentsAlert error={deleteInstrumentError} />}\n\n            <ModalContent />\n        </Modal>\n    );\n};\n\nexport default ManageInstrumentsModal;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled &&\n                            !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { type ComponentType } from 'react';\n\nimport type ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport { BasicFormField } from '../BasicFormField';\nimport { CheckboxInput } from '../CheckboxInput';\nimport { FormFieldError } from '../FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, {\n    type FunctionComponent,\n    type KeyboardEvent,\n    type MouseEvent,\n    type ReactNode,\n    useCallback,\n} from 'react';\nimport ReactModal from 'react-modal';\nimport { type Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {Boolean(closeButtonLabel) && (\n                            <span className=\"is-srOnly\">{closeButtonLabel}</span>\n                        )}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { type FieldsetHTMLAttributes, forwardRef, type ReactNode, type Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { ErrorMessage } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import React, {\n    type KeyboardEvent,\n    type KeyboardEventHandler,\n    type MouseEventHandler,\n    type ReactNode,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nconst ModalTrigger: React.FC<ModalTriggerProps> = ({ children, modal }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const canHandleEventRef = useRef(false);\n\n    useEffect(() => {\n        canHandleEventRef.current = true;\n\n        return () => {\n            canHandleEventRef.current = false;\n        };\n    }, []);\n\n    const handleOpen = useCallback(() => {\n        if (!canHandleEventRef.current) {\n            return;\n        }\n\n        setIsOpen(true);\n    }, []);\n\n    const handleClose = useCallback(() => {\n        if (!canHandleEventRef.current) {\n            return;\n        }\n\n        setIsOpen(false);\n    }, []);\n\n    const handleKeyOpen = useCallback(\n        (keyboardEvent: KeyboardEvent<HTMLElement>) => {\n            if (keyboardEvent.key === 'Enter') {\n                handleOpen();\n            }\n        },\n        [handleOpen],\n    );\n\n    return (\n        <>\n            {children({\n                onClick: handleOpen,\n                onKeyPress: handleKeyOpen,\n            })}\n\n            {modal({\n                isOpen,\n                onRequestClose: handleClose,\n            })}\n        </>\n    );\n};\n\nexport default ModalTrigger;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type HTMLAttributes } from 'react';\n\nexport interface LegendProps extends HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import React, { type FunctionComponent, memo, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckboxFormField } from '@bigcommerce/checkout/ui';\n\ninterface InstrumentStorageFieldProps {\n    isAccountInstrument: boolean;\n}\n\nconst InstrumentStorageField: FunctionComponent<InstrumentStorageFieldProps> = ({\n    isAccountInstrument,\n}) => {\n    const translationId = isAccountInstrument\n        ? 'payment.account_instrument_save_payment_method_label'\n        : 'payment.instrument_save_payment_method_label';\n\n    const labelContent = useMemo(() => <TranslatedString id={translationId} />, [translationId]);\n\n    return (\n        <CheckboxFormField\n            additionalClassName=\"form-field--saveInstrument\"\n            labelContent={labelContent}\n            name=\"shouldSaveInstrument\"\n        />\n    );\n};\n\nexport default memo(InstrumentStorageField);\n","import React, { type FunctionComponent, memo, useEffect, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { usePaymentFormContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { CheckboxFormField } from '@bigcommerce/checkout/ui';\n\ninterface InstrumentStoreAsDefaultFieldProps {\n    isAccountInstrument: boolean;\n    disabled?: boolean;\n}\n\nconst InstrumentStoreAsDefaultField: FunctionComponent<InstrumentStoreAsDefaultFieldProps> = ({\n    isAccountInstrument,\n    disabled = false,\n}) => {\n    const { paymentForm } = usePaymentFormContext();\n    const translationId = isAccountInstrument\n        ? 'payment.account_instrument_save_as_default_payment_method_label'\n        : 'payment.instrument_save_as_default_payment_method_label';\n\n    useEffect(() => {\n        if (disabled) {\n            paymentForm.setFieldValue('shouldSetAsDefaultInstrument', false);\n        }\n        // Ignoring paymentForm dependency as it causes sequential re-renders when included in array\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [disabled]);\n\n    const labelContent = useMemo(() => <TranslatedString id={translationId} />, [translationId]);\n\n    return (\n        <CheckboxFormField\n            additionalClassName=\"form-field--setAsDefaultInstrument\"\n            disabled={disabled}\n            labelContent={labelContent}\n            name=\"shouldSetAsDefaultInstrument\"\n        />\n    );\n};\n\nexport default memo(InstrumentStoreAsDefaultField);\n","import { type PaymentInstrument } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent } from 'react';\n\nimport {\n    type PaymentFormService,\n    usePaymentFormContext,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { Fieldset } from '@bigcommerce/checkout/ui';\n\nimport { InstrumentStorageField } from '../InstrumentStorageField';\nimport { InstrumentStoreAsDefaultField } from '../InstrumentStoreAsDefaultField';\n\ninterface StoreInstrumentFieldsetProps {\n    isAccountInstrument?: boolean;\n    instrumentId?: string;\n    instruments: PaymentInstrument[];\n}\n\ninterface WithStorageSettings {\n    showSave: boolean;\n    showSetAsDefault: boolean;\n    setAsDefaultEnabled: boolean;\n}\n\nconst useProps = (\n    props: StoreInstrumentFieldsetProps,\n    paymentForm: PaymentFormService,\n): WithStorageSettings => {\n    const saveIsChecked = Boolean(paymentForm.getFieldValue<boolean>('shouldSaveInstrument'));\n\n    const { instrumentId, instruments } = props;\n\n    const addingNewInstrument = !instrumentId;\n    const hasAnyOtherInstruments = !!instruments && instruments.length > 0;\n    const instrument =\n        instruments && instruments.find(({ bigpayToken }) => bigpayToken === instrumentId);\n\n    return {\n        ...props,\n        showSave: addingNewInstrument,\n        showSetAsDefault:\n            (addingNewInstrument && hasAnyOtherInstruments) ||\n            Boolean(instrument && !instrument.defaultInstrument),\n        setAsDefaultEnabled: !addingNewInstrument || saveIsChecked,\n    };\n};\n\nconst StoreInstrumentFieldset: FunctionComponent<StoreInstrumentFieldsetProps> = ({\n    isAccountInstrument = false,\n    ...props\n}) => {\n    const { paymentForm } = usePaymentFormContext();\n\n    const { showSave, showSetAsDefault, setAsDefaultEnabled } = useProps(props, paymentForm);\n\n    return (\n        <Fieldset>\n            {showSave && <InstrumentStorageField isAccountInstrument={isAccountInstrument} />}\n\n            {showSetAsDefault && (\n                <InstrumentStoreAsDefaultField\n                    disabled={!setAsDefaultEnabled}\n                    isAccountInstrument={isAccountInstrument}\n                />\n            )}\n        </Fieldset>\n    );\n};\n\nexport default StoreInstrumentFieldset;\n","import { type CardInstrument, type PaymentInstrument } from '@bigcommerce/checkout-sdk';\n\nexport function isCardInstrument(instrument?: PaymentInstrument): instrument is CardInstrument {\n    return instrument !== undefined && instrument.type === 'card';\n}\n\nexport default function assertIsCardInstrument(\n    instrument?: PaymentInstrument,\n): asserts instrument is CardInstrument {\n    if (!isCardInstrument(instrument)) {\n        throw new Error('Is not a card instrument.');\n    }\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPaypal: FunctionComponent = () => (\n    <svg height=\"300\" viewBox=\"0 0 255 300\" width=\"255\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M228.03 77.2c3.6-23.02-.03-38.7-12.48-52.89C201.83 8.7 177.07 2 145.4 2H53.4c-6.47 0-11.99 4.7-12.99 11.11L2.1 256.03a7.9 7.9 0 0 0 7.8 9.14h56.78c79.33-53.38 148.45-81.4 161.35-187.97z\"\n            fill=\"#253B80\"\n        />\n        <path\n            d=\"M228.02 77.2C124 73 95 98 80.5 177.52l-13.82 87.65-3.91 24.85a6.9 6.9 0 0 0 6.82 7.98h47.86c5.67 0 10.48-4.12 11.37-9.71l.48-2.43 9-57.2.59-3.15c.88-5.6 5.7-9.73 11.37-9.73h7.16c46.38 0 82.68-18.83 93.29-73.33 4.43-22.76 2.14-41.77-9.6-55.14a45.77 45.77 0 0 0-13.1-10.1z\"\n            fill=\"#179BD7\"\n        />\n        <path\n            d=\"M215.33 72.14c-3.88-1.12-7.82-2-11.8-2.62a149.83 149.83 0 0 0-23.79-1.73h-72.1a11.49 11.49 0 0 0-11.36 9.73l-15.34 97.16-.44 2.84a13.1 13.1 0 0 1 12.95-11.1h27c53 0 94.5-21.53 106.62-83.82.37-1.85.67-3.64.95-5.4a64.66 64.66 0 0 0-9.98-4.2c-.9-.3-1.8-.59-2.71-.86z\"\n            fill=\"#222D65\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPaypal);\n","import { type Placement } from '@popperjs/core';\nimport React, {\n    type MouseEventHandler,\n    type ReactNode,\n    useCallback,\n    useEffect,\n    useState,\n} from 'react';\nimport { Manager, Popper, Reference } from 'react-popper';\n\nimport {\n    CHECKOUT_ROOT_NODE_ID,\n    MICRO_APP_NG_CHECKOUT_ROOT_NODE_ID,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nexport interface DropdownTriggerProps {\n    placement?: Placement;\n    dropdown: ReactNode;\n    children?: ReactNode;\n}\n\nconst DropdownTrigger: React.FC<DropdownTriggerProps> = ({\n    placement = 'bottom-start',\n    dropdown,\n    children,\n}) => {\n    const [shouldShow, setShouldShow] = useState(false);\n\n    const getRootElement = useCallback(() => {\n        return (\n            document.getElementById(CHECKOUT_ROOT_NODE_ID) ||\n            document.getElementById(MICRO_APP_NG_CHECKOUT_ROOT_NODE_ID)\n        );\n    }, []);\n\n    const handleClose = useCallback(() => {\n        if (!shouldShow) {\n            return;\n        }\n\n        setShouldShow(false);\n    }, [shouldShow]);\n\n    const handleOpen = useCallback(() => {\n        if (shouldShow) {\n            return;\n        }\n\n        setShouldShow(true);\n    }, [shouldShow]);\n\n    const handleClick: MouseEventHandler<HTMLElement> = useCallback(() => {\n        if (shouldShow) {\n            handleClose();\n        } else {\n            handleOpen();\n        }\n    }, [shouldShow, handleClose, handleOpen]);\n\n    useEffect(() => {\n        const rootElement = getRootElement();\n\n        if (shouldShow) {\n            rootElement?.addEventListener('click', handleClose);\n        }\n\n        return () => {\n            rootElement?.removeEventListener('click', handleClose);\n        };\n    }, [shouldShow, handleClose, getRootElement]);\n\n    return (\n        <Manager>\n            <Reference>\n                {({ ref }) => (\n                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n                    <div className=\"dropdownTrigger\" onClick={handleClick} ref={ref}>\n                        {children}\n                    </div>\n                )}\n            </Reference>\n\n            <Popper\n                modifiers={[\n                    { name: 'hide', enabled: false },\n                    { name: 'flip', enabled: false },\n                    { name: 'preventOverflow', enabled: false },\n                ]}\n                placement={placement}\n            >\n                {({ ref, style }) =>\n                    !shouldShow ? null : (\n                        <div\n                            className=\"dropdownMenu\"\n                            ref={ref}\n                            style={{\n                                ...style,\n                                width: '100%',\n                                zIndex: 1,\n                            }}\n                        >\n                            {dropdown}\n                        </div>\n                    )\n                }\n            </Popper>\n        </Manager>\n    );\n};\n\nexport default DropdownTrigger;\n","import { type AchInstrument, type PaymentInstrument } from '@bigcommerce/checkout-sdk';\n\nexport default function isAchInstrument(\n    instrument: PaymentInstrument,\n): instrument is AchInstrument {\n    return (\n        instrument.type === 'bank' && (instrument.method === 'ecp' || instrument.method === 'ach')\n    );\n}\n","import { type BankInstrument, type PaymentInstrument } from '@bigcommerce/checkout-sdk';\n\nexport function isBankAccountInstrument(\n    instrument?: PaymentInstrument,\n): instrument is BankInstrument {\n    return (\n        instrument?.type === 'bank' && instrument?.method !== 'ach' && instrument?.method !== 'ecp'\n    );\n}\n\nexport default function assertIsBankInstrument(\n    instrument?: PaymentInstrument,\n): asserts instrument is BankInstrument {\n    if (!instrument || !isBankAccountInstrument(instrument)) {\n        throw new Error('Is not a bank account instrument.');\n    }\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport { Input, type InputProps } from '../Input';\nimport { Label } from '../Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, themeV2, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    { 'floating-form-field-input': themeV2 },\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { type AccountInstrument, type PaymentInstrument } from '@bigcommerce/checkout-sdk';\n\nexport default function isAccountInstrument(\n    instrument: PaymentInstrument,\n): instrument is AccountInstrument {\n    return instrument.type === 'account';\n}\n","import { type BankInstrument, type PaymentInstrument } from '@bigcommerce/checkout-sdk';\n\nexport function isSepaInstrument(instrument?: PaymentInstrument): instrument is BankInstrument {\n    return (\n        instrument?.type === 'bank' &&\n        (instrument?.method === 'sepa' || instrument?.method === 'sepa_direct_debit')\n    );\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconAch: FunctionComponent = () => (\n    <svg viewBox=\"25 0 50 48\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\n        <title id=\"iconAchTitle\">ACH</title>\n        <path\n            d=\"M30 9.5h40c1.9 0 3.5 1.6 3.5 3.5v22c0 1.9-1.6 3.5-3.5 3.5H30c-1.9 0-3.5-1.6-3.5-3.5V13c0-1.9 1.6-3.5 3.5-3.5z\"\n            fill=\"#1524d9\"\n        />\n        <path\n            d=\"m45.2 27.5-.6-1.4h-2.7l-.5 1.4h-1.8l3-7.1h1.7l2.8 7.1h-1.9zm-1.9-5.1-.9 2.4h1.8l-.9-2.4zm9.1 5c-.5.2-1 .3-1.6.3-.5 0-1-.1-1.5-.3-.9-.3-1.6-1-2-1.9-.4-1-.4-2 0-3 .2-.4.5-.8.8-1.2.4-.3.8-.6 1.2-.7 1-.4 2-.4 3 0 .4.2.9.4 1.2.8l-1.2 1.2c-.2-.2-.4-.4-.6-.5-.3-.1-.5-.2-.8-.2-.3 0-.6 0-.8.2-.2.1-.5.3-.6.5-.2.2-.3.4-.4.7-.1.3-.2.6-.1.9 0 .3 0 .6.1.9.1.3.2.5.4.7.2.2.4.3.6.4.3.1.5.2.8.2.3 0 .6-.1.9-.2.2-.1.5-.3.6-.5l1.2 1.1c-.3.1-.7.4-1.2.6zm6.4.1v-2.9H56v2.9h-1.7v-7.1H56v2.7h2.8v-2.7h1.7v7l-1.7.1z\"\n            fill=\"#fff\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconAch);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","export const CHECKOUT_ROOT_NODE_ID = 'checkout-app';\nexport const MICRO_APP_NG_CHECKOUT_ROOT_NODE_ID = 'micro-app-ng-checkout';\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: unknown): void;\n}\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return createElement(component as any, { field, ...props });\n};\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={form.getFieldMeta(field.name)}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\nexport default memo(BasicFormField);\n"],"names":["children","className","hidden","testId","isFloatingLabelEnabled","additionalClassName","rest","ManageInstrumentsRow","instrument","onDeleteInstrument","handleDelete","useCallback","bigpayToken","isAchInstrument","isSepaInstrument","TranslatedString","id","accountNumber","IconPaypal","size","Medium","externalId","onClick","type","memo","instruments","isDeletingInstrument","length","LoadingOverlay","isLoading","map","key","IconAch","issuer","cardType","mapFromInstrumentCardType","brand","cardInfo","isExpired","expirationDate","month","expiryMonth","year","expiryYear","isValid","CreditCardIcon","niceType","last4","error","status","Alert","A","Error","isOpen","onAfterOpen","noop","onDeleteInstrumentError","onRequestClose","isConfirmingDelete","setIsConfirmingDelete","useState","selectedInstrumentId","setSelectedInstrumentId","checkoutState","errors","getDeleteInstrumentError","statuses","isLoadingInstruments","checkoutService","deleteInstrument","clearError","deleteInstrumentError","handleCancel","existingError","handleConfirmDelete","err","String","handleDeleteInstrument","Modal","closeButtonLabel","footer","Button","Small","disabled","variant","Primary","header","ModalHeader","cardInstruments","filter","isCardInstrument","bankInstruments","accountInstruments","isAccountInstrument","achInstrument","bankAndAccountInstruments","ManageAccountInstrumentsTable","forwardRef","ref","placeholder","name","includes","toResolvableComponent","Component","resolveIds","Object","assign","props","labelContent","onChange","renderField","field","checked","value","label","errorId","kebabCase","render","height","viewBox","width","xmlns","d","additionalHeaderClassName","additionalBodyClassName","additionalModalClassName","shouldShowCloseButton","handleClose","event","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","href","preventDefault","Boolean","legend","renderMessage","message","htmlFor","role","Consumer","isSubmitted","modal","setIsOpen","canHandleEventRef","useRef","useEffect","current","handleOpen","handleKeyOpen","keyboardEvent","onKeyPress","translationId","useMemo","CheckboxFormField","paymentForm","setFieldValue","showSave","showSetAsDefault","setAsDefaultEnabled","saveIsChecked","getFieldValue","instrumentId","addingNewInstrument","hasAnyOtherInstruments","find","defaultInstrument","useProps","Fieldset","undefined","assertIsCardInstrument","fill","placement","dropdown","shouldShow","setShouldShow","getRootElement","document","getElementById","handleClick","rootElement","addEventListener","removeEventListener","modifiers","enabled","style","zIndex","method","isBankAccountInstrument","withIconContainer","AlertType","icon","describedBy","useId","Info","Success","Warning","renderDefaultIcon","themeV2","ButtonVariant","ButtonSize","getClassName","isFullWidth","Secondary","Action","Tiny","Large","xmlSpace","hasError","CHECKOUT_ROOT_NODE_ID","MICRO_APP_NG_CHECKOUT_ROOT_NODE_ID","InnerFieldInput","component","prevValueRef","isDate","getTime","createElement","InnerField","form","input","meta","getFieldMeta","prevForm","prevField","prevProps","nextForm","nextField","nextProps","renderInnerField"],"sourceRoot":""}
{"version":3,"file":"checkout-421fc1a5.js","mappings":"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A,EAAYs6B,UAAU5X,QAAO,CAAC0kB,EAAe7M,IACvB,cAAlBA,EAASp6B,KAAuBinC,EAAgB7M,EAASpB,OAASiO,GAC1E,EACP,CARuB5M,CAA0Bx6B,IAC1C85B,EACP,C,kECNA,MAAMuN,EAAkB,CACpBxiB,MAAO,EACPyiB,SAAU,KAQC,SAAehc,EAAS3f,EAAsBS,G,sDACzD,MAAM,MAAEyY,EAAK,SAAEyiB,GAAa,OAAH,wBAAQD,GAAoBj7B,GAErD,IACI,aAAaT,GACjB,CAAE,MAAO1B,GACL,GAAc,IAAV4a,EACA,MAAM5a,EAKV,aAFM,IAAI9G,SAAS8wB,GAAY3xB,WAAW2xB,EAASqT,KAE5Chc,EAAM3f,EAAI,CAAE27B,WAAUziB,MAAOA,EAAQ,GAChD,CACJ,G,mBCxBA,IAAKvY,E,iBAAL,SAAKA,GACD,gBACA,oBACA,sCACA,sCACA,oBACA,kBACA,sBACA,wBACA,sBACA,4BACA,0BACA,kCACA,kBACA,cACA,wBACA,8BACA,kCACA,gDACA,8BACA,8DACA,0CACA,wEACA,oDACA,gDACA,sDACA,gDACA,qBACA,4BACA,8CACA,sBACA,sBACA,kDACA,gBACA,cACA,gBACA,kBACA,kBACA,0BACA,kBACA,oBACA,sCACA,cACA,gCACA,6BACA,kCACA,8CACA,wDACA,qEACA,4CACA,0DACA,8DACA,oEACA,mEACA,wDACA,8DACA,gEACA,cACA,oBACA,oBACA,oBACA,cACA,kBACA,sBACA,oCACA,0CACA,0CACA,sBACA,wBACA,kCACA,oDACA,YACA,+CACH,CAzED,CAAKA,IAAAA,EAAe,KA2EpB,S,gFCjEA,MAwBA,EAxB8C,I,IAAA,SAC1C3N,EAAQ,UACRC,EAAS,OACTC,EAAM,OACNC,EAAM,uBACNC,EAAsB,oBACtBC,GAAmB,EAChBC,GAAI,cAPmC,2FAQxC,OACF,yCACSA,EAAI,CACTL,UAAY,IACR,CAAE,iBAAkBG,GACpBH,GAAa,aACb,CAAE,YAAaC,GACf,+BACAG,GACH,YACWF,IAEVH,G,mCCLV,MAEA,GAFyB,E,SAAAo3B,oBAAiDzrB,E,kHC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","sources":["webpack://checkout/./packages/ui/src/form/Label/Label.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CheckoutPageSkeleton.tsx","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/generated/checkoutButtons/index.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/RedirectToStorefrontLogin.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutPage.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/hooks/useLoadCheckout.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutIntermediate.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/ContinueButton.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderSummaryContainer.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderConfirmationPage.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/ui/src/form/TextInput/TextInput.tsx","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/ui/src/form/Input/Input.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/icon/IconChevronDown.tsx","webpack://checkout/./packages/ui/src/form/TextArea/TextArea.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicInput.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/RadioInput/RadioInput.tsx","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/ui/src/form/FormFieldError/FormFieldError.tsx","webpack://checkout/./packages/ui/src/form/FormField/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/MultiCheckboxControl.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/CheckboxGroupFormField.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveLazyComponent.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingStepHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/ui/src/form/CheckboxInput/CheckboxInput.tsx","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/OrderConfirmationPageSkeleton.tsx","webpack://checkout/./packages/ui/src/utils/isMobileView.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/ui/src/context/ThemeContext.tsx","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/ui/src/form/FormFieldContainer/FormFieldContainer.tsx","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/ui/src/context/ThemeProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/ui/src/form/BasicFormField/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CartSummarySkeleton.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        {...rest}\n        className={classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        )}\n        data-test={testId}\n    >\n        {children}\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { type Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, type FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, type FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { type FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import type CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.includes(id));\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst CheckoutPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\" data-test=\"checkout-page-skeleton\">\n        <div className=\"layout-main\">\n            <div className=\"checkout-steps checkout-page-skeleton\">\n                <div className=\"title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"subscription\">\n                    <div className=\"checkbox\" />\n                    <div className=\"description\" />\n                </div>\n                <div className=\"terms--1\" />\n                <div className=\"terms--2\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst CheckoutPageSkeletonMobile: FunctionComponent = () => (\n    <div\n        className=\"layout optimizedCheckout-contentPrimary\"\n        data-test=\"checkout-page-skeleton-mobile\"\n    >\n        <div className=\"layout-main \">\n            <div className=\"checkout-page-skeleton\">\n                <div className=\"walletbutton--tagline\" />\n                <div className=\"walletbutton\" />\n                <div className=\"walletbutton--divider\" />\n                <div className=\"mobile-title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"textbox\" />\n                <div className=\"terms--1\" />\n                <div className=\"mobile-title--2\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--3\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--4\" />\n                <div className=\"divider\" />\n                <div className=\"divider\" />\n            </div>\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CheckoutPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? <CheckoutPageSkeletonMobile /> : <CheckoutPageSkeletonDesktop />;\n};\n\nexport default CheckoutPageSkeleton;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { type ReactElement, useEffect, useState } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\nconst EmptyCartMessage = ({ waitInterval, loginUrl }: EmptyCartMessageProps): ReactElement => {\n    const [isWaiting, setIsWaiting] = useState(true);\n\n    useEffect(() => {\n        const waitToken = setTimeout(() => {\n            setIsWaiting(false);\n        }, waitInterval);\n\n        return () => {\n            clearTimeout(waitToken);\n        };\n    }, [waitInterval]);\n\n    return (\n        <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n            <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n        </LoadingOverlay>\n    );\n};\n\nexport default EmptyCartMessage;\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote walletbuttons-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div key={`skeleton-container-${i}`} />\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","const APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n    'googlepaystripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => SUPPORTED_METHODS.includes(methodId));\n}\n","import { lazy } from 'react';\n\nconst AmazonPayV2Button = lazy(() => import(/* webpackChunkName: \"amazon-pay-v2-button\" */'@bigcommerce/checkout/amazon-pay-v2-integration').then(module => ({ default: module.AmazonPayV2Button })));\nconst BigCommercePaymentsButton = lazy(() => import(/* webpackChunkName: \"big-commerce-payments-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigCommercePaymentsButton })));\nconst BigcommercePaymentsPayLaterButton = lazy(() => import(/* webpackChunkName: \"bigcommerce-payments-pay-later-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigcommercePaymentsPayLaterButton })));\nconst CheckoutButton = lazy(() => import(/* webpackChunkName: \"checkout-button\" */'@bigcommerce/checkout/checkout-button-integration').then(module => ({ default: module.CheckoutButton })));\nconst GooglePayButton = lazy(() => import(/* webpackChunkName: \"google-pay-button\" */'@bigcommerce/checkout/google-pay-integration').then(module => ({ default: module.GooglePayButton })));\nconst PayPalCommerceCreditButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-credit-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceCreditButton })));\nconst PayPalCommerceButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceButton })));\nconst StripeLinkV2Button = lazy(() => import(/* webpackChunkName: \"stripe-link-v2-button\" */'@bigcommerce/checkout/stripe-integration').then(module => ({ default: module.StripeLinkV2Button })));\n\nexport {\n  AmazonPayV2Button,\n  BigCommercePaymentsButton,\n  BigcommercePaymentsPayLaterButton,\n  CheckoutButton,\n  GooglePayButton,\n  PayPalCommerceCreditButton,\n  PayPalCommerceButton,\n  StripeLinkV2Button,\n};\n\nexport const ComponentRegistry = {\n  'AmazonPayV2Button': [\n    { \"id\": \"amazonpay\" }\n  ],\n  'BigCommercePaymentsButton': [\n    { \"id\": \"bigcommerce_payments\" }\n  ],\n  'BigcommercePaymentsPayLaterButton': [\n    { \"id\": \"bigcommerce_payments_paylater\" }\n  ],\n  'GooglePayButton': [\n    { \"id\": \"googlepayadyenv2\" },\n    { \"id\": \"googlepayadyenv3\" },\n    { \"id\": \"googlepayauthorizenet\" },\n    { \"id\": \"googlepaybnz\" },\n    { \"id\": \"googlepaybraintree\" },\n    { \"id\": \"googlepaypaypalcommerce\" },\n    { \"id\": \"googlepaycheckoutcom\" },\n    { \"id\": \"googlepaycybersourcev2\" },\n    { \"id\": \"googlepayorbital\" },\n    { \"id\": \"googlepaystripe\" },\n    { \"id\": \"googlepaystripeupe\" },\n    { \"id\": \"googlepayworldpayaccess\" },\n    { \"id\": \"googlepaytdonlinemart\" },\n    { \"id\": \"googlepaystripeocs\" }\n  ],\n  'PayPalCommerceButton': [\n    { \"id\": \"paypalcommerce\" }\n  ],\n  'PayPalCommerceCreditButton': [\n    { \"id\": \"paypalcommercecredit\" }\n  ],\n  'StripeLinkV2Button': [\n    { \"id\": \"stripeocs\" }\n  ]\n} as const;\n\n    \n","import { type ComponentType } from 'react';\n\nimport {\n    type CheckoutButtonProps,\n    type CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveLazyComponent } from '../common/resolver';\nimport * as lazyCheckoutButtons from '../generated/checkoutButtons';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId\n): ComponentType<CheckoutButtonProps> | undefined {\n    const { ComponentRegistry, ...components } = lazyCheckoutButtons;\n\n    return resolveLazyComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        components,\n        ComponentRegistry,\n    );\n}\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { type FunctionComponent, lazy, Suspense } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\n\nconst ApplePayButton = lazy(() => import(/* webpackChunkName: \"apple-pay-button\" */'./customWalletButton/ApplePayButton'));\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return <Suspense>\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            </Suspense>;\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo, Suspense } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext, WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { themeV2 } = useThemeContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton(\n            { id: methodId },\n        );\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <Suspense key={methodId}> \n            <ResolvedCheckoutButton\n                checkoutService={checkoutService}\n                checkoutState={checkoutState}\n                containerId={`${methodId}CheckoutButton`}\n                language={language}\n                methodId={methodId}\n                onUnhandledError={onUnhandledError}\n                onWalletButtonClick={onWalletButtonClick}\n            />\n        </Suspense>;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': themeV2,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({ 'sub-header': themeV2 })}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({ hasBoltAccount });\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { type SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { type Checkout, type Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.includes(methodId);\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => !SUPPORTED_METHODS.includes(payment.providerId),\n    );\n}\n","import { type CheckoutSelectors, type CustomerRequestOptions, type CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': themeV2 },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={themeV2 ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import {\n    type CheckoutSelectors,\n    type CheckoutService,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { LazyContainer } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\nexport interface CheckoutButtonListProps {\n    hideText?: boolean;\n    isInitializing?: boolean;\n    methodIds?: string[];\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onClick?(methodId: string): void;\n    onError?(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonListProps {\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n}\n\nconst CheckoutButtonList: FunctionComponent<WithCheckoutCheckoutButtonListProps & CheckoutButtonListProps> = ({\n    checkoutService,\n    checkoutState,\n    hideText = false,\n    isInitializing = false,\n    methodIds = [],\n    checkEmbeddedSupport,\n    deinitialize,\n    initialize,\n    onClick = noop,\n    onError,\n}) => {\n    const { language } = useLocale();\n    const supportedMethodIds = getSupportedMethodIds(methodIds);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    const renderButtons = () => {\n        return supportedMethodIds.map((methodId) => {\n            const ResolvedCheckoutButton = resolveCheckoutButton(\n                { id: methodId },\n            );\n\n            if (!ResolvedCheckoutButton) {\n                return <CheckoutButtonV1Resolver\n                    deinitialize={deinitialize}\n                    initialize={initialize}\n                    isShowingWalletButtonsOnTop={false}\n                    key={methodId}\n                    methodId={methodId}\n                    onClick={onClick}\n                    onError={onClick}\n                />\n            }\n\n            return <LazyContainer key={methodId}>\n                <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onClick}\n                    onWalletButtonClick={onClick}\n                />\n            </LazyContainer>;\n        });\n    };\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {renderButtons()}\n            </div>\n        </>\n    );\n};\n\nfunction mapToCheckoutButtonListProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonListProps | null {\n    return {\n        checkoutService,\n        checkoutState,\n    };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonListProps)(CheckoutButtonList));\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, type ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { type FormField, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, type ObjectSchema, string } from 'yup';\n\nimport {\n    type CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    type TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { type PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { type FormField } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { DynamicFormField , useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    type CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\n\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const { themeV2 } = useThemeContext();\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = transformFormFieldsData(formFields, defaultShouldSubscribe);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                            themeV2={themeV2}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    className={themeV2 ? 'body-bold' : ''}\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className={classNames('button optimizedCheckout-buttonSecondary',\n                        { 'body-bold': themeV2 })}\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import React, { type FunctionComponent, type MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { type TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                themeV2={themeV2}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n            themeV2={themeV2}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { type SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    type WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { type FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { type FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { type FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const paymentMethod =\n        !!providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        isFastlaneHostWindow(window) &&\n        !!paymentMethod &&\n        !!paymentMethod.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if (shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            void fastlane\n                .FastlaneWatermarkComponent({\n                    includeAdditionalInfo: true,\n                })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className=\"paypalFastlaneWatermark-container\">\n                <div data-test=\"paypalFastlaneWatermark\" id=\"paypalFastlaneWatermark\" />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n};\n\nexport default PayPalFastlaneWatermark;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n        themeV2={themeV2}\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink themeV2={themeV2} url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <p className={themeV2 ? 'body-regular' : ''}>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent themeV2={themeV2} url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset themeV2={themeV2} url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, type BooleanSchema, object, type ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <>\n            <Input\n                {...field}\n                checked={field.value}\n                className=\"form-checkbox\"\n                id={field.name}\n                testId=\"should-subscribe-checkbox\"\n                type=\"checkbox\"\n                value={String(field.value)}\n            />\n\n            <Label\n                additionalClassName={themeV2 ? 'body-regular' : ''}\n                htmlFor={field.name}\n            >\n                <TranslatedHtml\n                    id={\n                        requiresMarketingConsent\n                            ? 'customer.guest_marketing_consent'\n                            : 'customer.guest_subscribe_to_newsletter_text'\n                    }\n                />\n            </Label>\n        </>\n    );\n}\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { type FieldProps, type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useEffect } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    defaultShouldSubscribe,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n    setFieldValue,\n}) => {\n    const {\n        checkoutState: {\n            data: { getConfig }\n        }\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className={classNames('customerEmail-button', {\n                                'body-bold': themeV2,\n                            })}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className={classNames('customer-login-link',\n                        { 'body-regular': themeV2 })}\n                    >\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            themeV2={themeV2}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { Button, ButtonVariant, useThemeContext } from '@bigcommerce/checkout/ui';\n\ninterface RedirectToStorefrontLoginProps {\n    isDisabled: boolean;\n    isLoading: boolean;\n}\n\nexport const RedirectToStorefrontLogin: React.FC<RedirectToStorefrontLoginProps> = ({\n    isDisabled,\n    isLoading,\n}) => {\n    const { themeV2 } = useThemeContext();\n    const { checkoutState: { data: { getConfig } } } = useCheckout();\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    const { checkoutLink, loginLink } = config.links;\n\n    const handleRedirect = () => {\n        return window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n    }\n\n    return (\n        <Button\n            className={themeV2 ? 'body-bold' : ''}\n            disabled={isDisabled}\n            id=\"checkout-customer-continue\"\n            isLoading={isLoading}\n            onClick={handleRedirect}\n            testId=\"customer-continue-button\"\n            variant={ButtonVariant.Primary}\n        >\n            <TranslatedString id=\"customer.sign_in_action\" />\n        </Button>\n    );\n};\n","import classNames from 'classnames';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    type WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\nimport { RedirectToStorefrontLogin } from './RedirectToStorefrontLogin';\n\nexport interface LoginFormProps {\n    isBuyNowCart: boolean;\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    isBuyNowCart,\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    shouldRedirectToStorefrontForAuth,\n    viewType = CustomerViewType.Login,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                {!shouldRedirectToStorefrontForAuth && <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />}\n\n                <p className={classNames('form-legend-container', { 'body-cta': themeV2 })}>\n                    <span>\n                        { isSignInEmailEnabled && !isBuyNowCart &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled && !shouldRedirectToStorefrontForAuth &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    {shouldRedirectToStorefrontForAuth ?\n                        <RedirectToStorefrontLogin\n                            isDisabled={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                            isLoading={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                        />\n                        :\n                        <Button\n                            className={themeV2 ? 'body-bold' : ''}\n                            disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                            testId=\"customer-continue-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>}\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { type FieldProps, type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useEffect, useState } from 'react';\nimport { object } from 'yup';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport type CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { type GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    defaultShouldSubscribe,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status,\n    setFieldValue,\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        setFieldValue('email', email);\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            requiresMarketingConsent ? false : defaultShouldSubscribe,\n        );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ { display: isStripeLoading ? 'none' : undefined } }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n\n                return object({});\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    type CheckoutPaymentMethodExecutedOptions,\n    type CheckoutSelectors,\n    type CustomerAccountRequestBody,\n    type CustomerCredentials,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n    type FormField,\n    type GuestCredentials,\n    type SignInEmail,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, type ReactNode } from 'react';\n\nimport { type AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport type CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { type EmailLoginFormValues } from './EmailLoginForm';\nimport { type CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { type GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isBuyNowCart: boolean;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({ methodId: providerWithCustomCheckout });\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        if (!isReady) {\n            return null;\n        }\n\n        return (\n            <>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isBuyNowCart,\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n            shouldRedirectToStorefrontForAuth,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId=\"customer.continue_as_guest_action\"\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isBuyNowCart={isBuyNowCart}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldRedirectToStorefrontForAuth={shouldRedirectToStorefrontForAuth}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            shouldRedirectToStorefrontForAuth\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isBuyNowCart: cart.source === 'BUY_NOW',\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        shouldRedirectToStorefrontForAuth,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import { type CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { type CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { type Banner, type Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': themeV2 })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': themeV2 })}>\n                        <span className=\"address-line-1\">{address.address1}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': themeV2 })}>\n                        {address.city && <span className=\"locality\">{address.city}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={themeV2 ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n\n                <ConsignmentLineItemDetail isMultiShippingSummary lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': themeV2 && (isActive || isComplete) },\n                        { 'header-secondary': themeV2 && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            {themeV2 && !isActive && isComplete &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary body-regular\"\n                    data-test=\"step-info\"\n                    >\n                        {summary}\n                </div>\n            }\n\n            {!themeV2 &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                    data-test=\"step-info\"\n                >\n                    {!isActive && isComplete && summary}\n                </div>\n            }\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': themeV2 })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nconst CheckoutStep = ({\n        children,\n        heading,\n        isActive,\n        isBusy,\n        isComplete,\n        isEditable,\n        onEdit,\n        suggestion,\n        summary,\n        type,\n        onExpanded = noop,\n    }: CheckoutStepProps): ReactElement => {\n    const [isClosed, setIsClosed] = useState(true);\n\n    const containerRef = useRef<HTMLLIElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const timeoutRef = useRef<number>();\n    const timeoutDelay = useRef<number>();\n\n    const getChildInput = (): HTMLElement | undefined => {\n        const container = containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    };\n\n    const getScrollPosition = (): number | undefined => {\n        const container = getParentContainer();\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    };\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    const getParentContainer = (): HTMLElement | undefined => {\n        let container: HTMLElement | null = containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return containerRef.current ? containerRef.current : undefined;\n    };\n\n    const getTransitionDelay = (): number => {\n        if (timeoutDelay.current !== undefined) {\n            return timeoutDelay.current;\n        }\n\n        timeoutDelay.current =\n            parseFloat(\n                contentRef.current\n                    ? getComputedStyle(contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return timeoutDelay.current;\n    };\n\n    const focusStep = (): void => {\n        const delay = isMobileView() ? 0 : getTransitionDelay();\n\n        setIsClosed(false);\n\n        timeoutRef.current = window.setTimeout(() => {\n            const input = getChildInput();\n            const position = getScrollPosition();\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            timeoutRef.current = undefined;\n        }, delay);\n    };\n\n    const handleTransitionEnd = (node: HTMLElement, done: () => void): void => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    const onAnimationEnd = useCallback((): void => {\n        if (!isActive) {\n            setIsClosed(true);\n        }\n    }, [isActive]);\n\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current) {\n                window.clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isActive) {\n            focusStep();\n        }\n    }, [isActive]);\n\n    return (\n        <li\n            className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                [`checkout-step--${type}`]: !!type,\n            })}\n            ref={containerRef}\n        >\n            <div className=\"checkout-view-header\">\n                <CheckoutStepHeader\n                    heading={heading}\n                    isActive={isActive}\n                    isComplete={isComplete}\n                    isEditable={isEditable}\n                    onEdit={onEdit}\n                    summary={summary}\n                    type={type}\n                />\n            </div>\n\n            {suggestion && isClosed && !isActive && (\n                <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                    {suggestion}\n                </div>\n            )}\n\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={onAnimationEnd}\n                        timeout={{}}\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        </li>\n    );\n};\n\nexport default CheckoutStep;\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { type Cart, type StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { type CheckoutPayment, type CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    type Address,\n    type Cart,\n    type CartChangedError,\n    type CheckoutParams,\n    type CheckoutSelectors,\n    type CheckoutStoreSelector,\n    type Consignment,\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    type FlashMessage,\n    type PaymentMethod,\n    type Promotion,\n    type RequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, type ReactNode } from 'react';\n\nimport { type AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, type ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport {\n    AddressFormSkeleton,\n    CartSummarySkeleton,\n    ChecklistSkeleton,\n    LazyContainer,\n    LoadingNotification,\n    OrderConfirmationPageSkeleton\n} from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    type CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { type EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport type CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport type CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n                ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n                ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n                ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n                ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n                ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    data?: CheckoutStoreSelector;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    themeV2?:boolean;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    data: CheckoutStoreSelector;\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            containerId,\n            createEmbeddedMessenger,\n            data,\n            embeddedStylesheet,\n            extensionService,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            if (document.prerendering) {\n                document.addEventListener('prerenderingchange', () => {\n                    analyticsTracker.checkoutBegin();\n                }, { once: true });\n            }\n            else {\n                analyticsTracker.checkoutBegin();\n            }\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n            this.handleReady();\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isRedirecting } = this.state;\n        const { themeV2 } = this.props;\n\n        if(isRedirecting){\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() }, { 'themeV2': themeV2 })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n                {this.renderCartSummary()}\n            </>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        const setIsMultishippingMode = (value: boolean) => {\n            this.setState({ isMultiShippingMode: value });\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        setIsMultishippingMode={setIsMultishippingMode}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                    <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                    <Extension region={ExtensionRegion.SummaryAfter} />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            // TODO: setting activeStepType here is causing significant delay in rendering guest shopper form\n            // When converting functional component, we should set activeStepType before rendering <CheckoutPage />\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n            findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { type CheckoutSelectors, type CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { type WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        data,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: getCheckoutStepStatuses(checkoutState),\n    };\n}\n","import { useEffect, useState } from 'react';\n\nimport { useExtensions } from '@bigcommerce/checkout/checkout-extension';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nexport const useLoadCheckout = (checkoutId: string): {isLoadingCheckout: boolean} => {\n    const [ isLoadingCheckout, setIsLoadingCheckout ] = useState(true);\n    const { checkoutService } = useCheckout();\n    const { extensionService } = useExtensions();\n\n    const fetchData = async () => {\n        await Promise.all([\n            checkoutService.loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }),\n            extensionService.loadExtensions(),\n        ]);\n    };\n\n    const fetchDataWithRetry = async (maxRetries = 3): Promise<void> => {\n        const attemptFetch = async (attemptSequence = 1): Promise<void> => {\n            try {\n                await fetchData();\n            } catch {\n                if (attemptSequence >= maxRetries) {\n                    throw new Error('Failed to load checkout after 3 attempts, please try again.');\n                }\n\n                const delay = attemptSequence ** 2 * 1000;\n\n                await new Promise(resolve => setTimeout(resolve, delay));\n\n                await attemptFetch(attemptSequence + 1);\n            }\n        };\n\n        await attemptFetch();\n    };\n\n    useEffect(() => {\n        fetchDataWithRetry()\n            .then(() => setIsLoadingCheckout(false))\n            .catch((error) => {\n                throw error;\n            });\n    }, []);\n\n    return  { isLoadingCheckout };\n};\n","import CheckoutIntermediate from './CheckoutIntermediate';\n\nexport default CheckoutIntermediate;\nexport { CheckoutProps, CheckoutState, WithCheckoutProps } from './CheckoutPage';\n","import {\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { CheckoutPageSkeleton, useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { type EmbeddedCheckoutStylesheet } from '../embeddedCheckout';\n\nimport CheckoutPage from './CheckoutPage';\nimport type CheckoutSupport from './CheckoutSupport';\nimport { useLoadCheckout } from './hooks';\n\ninterface CheckoutIntermediateProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nconst CheckoutIntermediate:React.FC<CheckoutIntermediateProps>= (props) => {\n    const { checkoutId } = props;\n    const { isLoadingCheckout } = useLoadCheckout(checkoutId);\n    const { themeV2 } = useThemeContext();\n\n    if (isLoadingCheckout) {\n        return <CheckoutPageSkeleton />;\n    }\n\n    return <CheckoutPage\n            {...props}\n            createEmbeddedMessenger={props.createEmbeddedMessenger}\n            embeddedStylesheet={props.embeddedStylesheet}\n            embeddedSupport={props.embeddedSupport}\n            errorLogger={props.errorLogger}\n            themeV2={themeV2}\n        />;\n};\n\nexport default CheckoutIntermediate;\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { type ReactElement, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst CheckoutApp = (props: CheckoutAppProps): ReactElement => {\n    const { containerId, sentryConfig, publicPath, sentrySampleRate } = props;\n\n    const checkoutService = useMemo(() => createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    }), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const embeddedSupport = useMemo(() => createEmbeddedCheckoutSupport(getLanguageService()), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n        { sentry: sentryConfig },\n        {\n            errorTypes: ['UnrecoverableError'],\n            publicPath,\n            sampleRate: sentrySampleRate || 0.1,\n        },\n    ), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    return (\n        <ErrorBoundary logger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider\n                            checkoutService={checkoutService}\n                            errorLogger={createErrorLogger()}\n                        >\n                            <ThemeProvider>\n                                <Checkout\n                                    {...props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    embeddedSupport={embeddedSupport}\n                                    errorLogger={errorLogger}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default CheckoutApp;\n","import type { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { Component, type ReactNode } from 'react';\n\nimport type ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        // Adding errorCode with value `ErrorBoundary` to collect usage statistics of ErrorBoundary\n        if (logger) {\n            logger.log(error, {\n                errorCode: 'ErrorBoundary',\n            });\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isFunction, noop } from 'lodash';\nimport React, {\n    createContext,\n    type FunctionComponent,\n    memo,\n    type ReactNode,\n    useMemo,\n    useState,\n} from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { createRequestSender, type RequestSender } from '@bigcommerce/request-sender';\n\nimport { type CreatedCustomer, type CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { type GatewayOrderPayment, type Order, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { type PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import React, { type FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { type GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { type GatewayOrderPayment, type GiftCertificateOrderPayment, type Order, type StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { type FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import React, { type ReactElement } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonVariant } from '../../ui/button';\n\nexport const ContinueButton = ({ siteLink }:{siteLink: string}): ReactElement => (\n    <div className=\"continueButtonContainer\">\n        <form action={siteLink} method=\"get\" target=\"_top\">\n            <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                <TranslatedString id=\"order_confirmation.continue_shopping\" />\n            </Button>\n        </form>\n    </div>\n);\n","import { type GiftCertificate, type OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { type Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { type OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { type OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import { type Order, type ShopperCurrency, type StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { lazy, type ReactElement } from 'react';\n\nimport { CartSummarySkeleton, LazyContainer } from '@bigcommerce/checkout/ui';\n\nimport { retry } from '../../common/utility';\nimport { MobileView } from '../../ui/responsive';\nimport mapToOrderSummarySubtotalsProps from '../mapToOrderSummarySubtotalsProps';\nimport PrintLink from '../PrintLink';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                '../OrderSummary'\n                ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                '../OrderSummaryDrawer'\n                ),\n    ),\n);\n\ninterface OrderSummaryContainerProps {\n    order: Order;\n    currency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nexport const OrderSummaryContainer = ({\n    currency,\n    isShippingDiscountDisplayEnabled,\n    order,\n    shopperCurrency,\n}:OrderSummaryContainerProps):ReactElement => (\n    <MobileView>\n        {(matched) => {\n            if (matched) {\n                return (\n                    <LazyContainer loadingSkeleton={<></>}>\n                        <OrderSummaryDrawer\n                            {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                            headerLink={<PrintLink className=\"modal-header-link cart-modal-link\" />}\n                            lineItems={order.lineItems}\n                            shopperCurrency={shopperCurrency}\n                            storeCurrency={currency}\n                            total={order.orderAmount}\n                        />\n                    </LazyContainer>\n                );\n            }\n\n            return (\n                <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                    <aside className=\"layout-cart\">\n                        <OrderSummary\n                            headerLink={<PrintLink />}\n                            {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                            lineItems={order.lineItems}\n                            shopperCurrency={shopperCurrency}\n                            storeCurrency={currency}\n                            total={order.orderAmount}\n                        />\n                    </aside>\n                </LazyContainer>\n            );\n        }}\n    </MobileView>\n);\n","import {\n    type Order,\n    type ShopperConfig,\n    type ShopperCurrency,\n    type StoreConfig,\n    type StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { type ReactElement } from 'react';\n\nimport { ErrorModal } from '../../common/error';\nimport { getPasswordRequirementsFromConfig } from '../../customer';\nimport { isEmbedded } from '../../embeddedCheckout';\nimport {\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    type SignUpFormValues,\n} from '../../guestSignup';\nimport OrderConfirmationSection from '../OrderConfirmationSection';\nimport OrderStatus from '../OrderStatus';\nimport ThankYouHeader from '../ThankYouHeader';\n\nimport { ContinueButton } from './ContinueButton';\nimport { OrderSummaryContainer } from './OrderSummaryContainer';\n\ninterface OrderConfirmationPageProps {\n    order: Order;\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber: string | undefined;\n    paymentInstructions: string | undefined;\n    shouldShowPasswordForm: boolean;\n    hasSignedUp: boolean | undefined;\n    isSigningUp: boolean | undefined;\n    onSignUp(values: SignUpFormValues): void;\n    shopperConfig: ShopperConfig;\n    customerCanBeCreated: boolean;\n    siteLink: string;\n    currency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    isShippingDiscountDisplayEnabled: boolean;\n    error: Error | undefined;\n    onErrorModalClose(): void;\n}\n\nexport const OrderConfirmationPage = ({\n    config,\n    currency,\n    customerCanBeCreated,\n    error,\n    hasSignedUp,\n    isShippingDiscountDisplayEnabled,\n    isSigningUp,\n    onErrorModalClose,\n    onSignUp,\n    order,\n    paymentInstructions,\n    shopperConfig,\n    shopperCurrency,\n    shouldShowPasswordForm,\n    siteLink,\n    supportEmail,\n    supportPhoneNumber,\n}: OrderConfirmationPageProps): ReactElement => (\n    <div\n        className={classNames('layout optimizedCheckout-contentPrimary', {\n            'is-embedded': isEmbedded(),\n        })}\n    >\n        <div className=\"layout-main\">\n            <div className=\"orderConfirmation\">\n                <ThankYouHeader name={order.billingAddress.firstName} />\n                <OrderStatus\n                    config={config}\n                    order={order}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n                {paymentInstructions && (\n                    <OrderConfirmationSection>\n                        <div\n                            dangerouslySetInnerHTML={{\n                                __html: DOMPurify.sanitize(paymentInstructions),\n                            }}\n                            data-test=\"payment-instructions\"\n                        />\n                    </OrderConfirmationSection>\n                )}\n\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={onSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? (\n                        <PasswordSavedSuccessAlert />\n                    ) : (\n                        <SignedUpSuccessAlert />\n                    ))}\n\n                <ContinueButton siteLink={siteLink} />\n            </div>\n        </div>\n\n        <OrderSummaryContainer\n            currency={currency}\n            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n            order={order}\n            shopperCurrency={shopperCurrency}\n        />\n\n        <ErrorModal error={error} onClose={onErrorModalClose} shouldShowErrorCode={false} />\n    </div>\n);\n\n","import {\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, {  type ReactElement, useEffect, useRef, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { OrderConfirmationPageSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { isExperimentEnabled } from '../../common/utility';\nimport { type EmbeddedCheckoutStylesheet } from '../../embeddedCheckout';\nimport {\n    type CreatedCustomer,\n    type SignUpFormValues,\n} from '../../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../../guestSignup/errors';\nimport getPaymentInstructions from '../getPaymentInstructions';\n\nimport { OrderConfirmationPage } from './OrderConfirmationPage';\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport const OrderConfirmation = ({\n    containerId,\n    createAccount,\n    createEmbeddedMessenger,\n    embeddedStylesheet,\n    orderId,\n    errorLogger,\n}: OrderConfirmationProps): ReactElement => {\n    const [error, setError] = useState<Error | undefined>();\n    const [hasSignedUp, setHasSignedUp] = useState<boolean | undefined>();\n    const [isSigningUp, setIsSigningUp] = useState<boolean | undefined>();\n\n    const embeddedMessengerRef = useRef<EmbeddedCheckoutMessenger | undefined>();\n\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService: {\n            loadOrder,\n        },\n    } = useCheckout();\n    const { analyticsTracker } = useAnalytics();\n\n    const config = getConfig();\n    const order = getOrder();\n\n    const handleUnhandledError = (e: Error) => {\n        setError(e);\n        errorLogger.log(e);\n\n        if (embeddedMessengerRef.current) {\n            embeddedMessengerRef.current.postError(e);\n        }\n    };\n\n    const handleErrorModalClose = () => {\n        setError(undefined);\n    };\n\n    const handleSignUp = ({ password, confirmPassword }: SignUpFormValues) => {\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig && shopperConfig.passwordRequirements && shopperConfig.passwordRequirements.error) || '';\n\n        setIsSigningUp(true);\n\n        createAccount({ password, confirmPassword })\n            .then(() => {\n                setHasSignedUp(true);\n                setIsSigningUp(false);\n            })\n            .catch((err) => {\n                setError(\n                    err.status < 500\n                        ? new AccountCreationRequirementsError(err, passwordRequirements)\n                        : new AccountCreationFailedError(err),\n                );\n                setHasSignedUp(false);\n                setIsSigningUp(false);\n            });\n    };\n\n    useEffect(() => {\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                embeddedMessengerRef.current = messenger;\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n                analyticsTracker.orderPurchased();\n            })\n            .catch(handleUnhandledError);\n    }, []);\n\n    if (!order || !config || isLoadingOrder()) {\n        return <OrderConfirmationPageSkeleton />;\n    }\n\n    const paymentInstructions = getPaymentInstructions(order);\n    const {\n        checkoutSettings,\n        currency,\n        shopperConfig,\n        shopperCurrency,\n        storeProfile: { orderEmail, storePhoneNumber },\n        links: { siteLink },\n    } = config;\n    const shouldShowPasswordForm = order.customerCanBeCreated;\n    const customerCanBeCreated = !order.customerId;\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return (\n        <OrderConfirmationPage\n            config={config}\n            currency={currency}\n            customerCanBeCreated={customerCanBeCreated}\n            error={error}\n            hasSignedUp={hasSignedUp}\n            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n            isSigningUp={isSigningUp}\n            onErrorModalClose={handleErrorModalClose}\n            onSignUp={handleSignUp}\n            order={order}\n            paymentInstructions={paymentInstructions}\n            shopperConfig={shopperConfig}\n            shopperCurrency={shopperCurrency}\n            shouldShowPasswordForm={shouldShowPasswordForm}\n            siteLink={siteLink}\n            supportEmail={orderEmail}\n            supportPhoneNumber={storePhoneNumber}\n        />\n    );\n};\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, type CreatedCustomer, type SignUpFormValues } from '../guestSignup';\n\nimport { OrderConfirmation } from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst OrderConfirmationApp: React.FC<OrderConfirmationAppProps> = ({\n    containerId,\n    orderId,\n    publicPath,\n    sentryConfig,\n    sentrySampleRate,\n}) => {\n    const accountService = useMemo(() => new AccountService(), []);\n    const checkoutService = useMemo(() => createCheckoutService({\n            locale: getLanguageService().getLocale(),\n            shouldWarnMutation: process.env.NODE_ENV === 'development',\n    }), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n            { sentry: sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath,\n                sampleRate: sentrySampleRate || 0.1,\n            },\n    ), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    const createAccount = useCallback(\n        ({ password, confirmPassword }: SignUpFormValues): Promise<CreatedCustomer> => {\n            return accountService.create({\n                orderId,\n                newsletter: false,\n                password,\n                confirmPassword,\n            });\n        },\n        [accountService, orderId],\n    );\n\n    return (\n        <ErrorBoundary logger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider checkoutService={checkoutService} errorLogger={createErrorLogger()}>\n                            <ThemeProvider>\n                                <OrderConfirmation\n                                    containerId={containerId}\n                                    createAccount={createAccount}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    errorLogger={errorLogger}\n                                    orderId={orderId}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default OrderConfirmationApp;\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref } from 'react';\n\nimport { Input, type InputProps } from '../Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import { type FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    type ArraySchema,\n    date,\n    number,\n    type NumberSchema,\n    object,\n    type ObjectSchema,\n    type Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.CHECKBOX) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.CHECKBOX\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled &&\n                            !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { type ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n\n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': themeV2 })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': themeV2 })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\nexport default function isBuyNowCart(cart?: Cart): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n    const params = new URLSearchParams(window.location.search);\n\n    return (\n        cart?.source === 'BUY_NOW' ||\n        params.get('action') === 'buy' ||\n        !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout')\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { type FunctionComponent } from 'react';\n\nimport { withCurrency, type WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(<div key={`checklist-skeleton-item${i}`} />);\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { type Cart, type Consignment, type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <>\n            <div className=\"address-form-skeleton\">\n                <div className=\"label\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name\" />\n                <div className=\"name\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"address\" />\n            </div>\n        </>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref, type TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import { type FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { type FunctionComponent, lazy, memo, Suspense, useCallback } from 'react';\n\nimport { withDate, type WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../../icon';\nimport { CheckboxInput } from '../CheckboxInput';\nimport { type InputProps } from '../Input';\nimport { RadioInput } from '../RadioInput';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\n\nconst ReactDatePicker = lazy(\n    () =>\n        import(\n            /* webpackChunkName: \"react-datepicker\" */\n            'react-datepicker'\n        ),\n);\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    inputDateFormat?: string;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    value,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n    date,\n    inputDateFormat,\n    ...rest\n}) => {\n    const inputFormat = inputDateFormat || date.inputFormat || '';\n\n    const handleDateChange = useCallback(\n        (dateValue: string, event: any) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.DROPDOWM:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}\n                    >\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                            { 'floating-form-field-input': themeV2 },\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value ?? ''}\n                    >\n                        {!!placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.RADIO:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.CHECKBOX:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.DATE:\n            return (\n                <Suspense>\n                    <ReactDatePicker\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        {...(rest as any)}\n                        autoComplete=\"off\"\n                        // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                        // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                        // onChangeRaw={ rest.onChange }\n                        calendarClassName=\"optimizedCheckout-contentPrimary\"\n                        className={classNames('form-input optimizedCheckout-form-input', {\n                            'floating-input': isFloatingLabelEnabled,\n                            'floating-form-field-input': themeV2,\n                        })}\n                        dateFormat={inputFormat}\n                        maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                        minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                        name={name}\n                        onChange={handleDateChange}\n                        placeholderText={inputFormat.toUpperCase()}\n                        popperClassName=\"optimizedCheckout-contentPrimary\"\n                        selected={isDate(value) ? value : undefined}\n                    />\n                </Suspense>\n            );\n\n        case DynamicFormFieldType.MULTILINE:\n            return (\n                <TextArea\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.PASSWORD ? 'password' : 'text'\n                    }`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import { isEmpty, pickBy } from 'lodash';\nimport React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n} from 'react';\n\nimport type InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { type CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import type CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { type Address, type AddressKey, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.DATE && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.DATE) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.CHECKBOX) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    themeV2?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  type ErrorLogger,\n  type ErrorMeta,\n  type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import { getScriptLoader } from '@bigcommerce/script-loader';\nimport type {\n    BrowserOptions,\n    ErrorEvent,\n    EventHint,\n    Exception,\n    SeverityLevel,\n    StackFrame,\n} from '@sentry/browser';\n\nimport {\n    ErrorLevelType,\n    type ErrorLogger,\n    type ErrorMeta,\n    type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport type ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n    private dsn: string;\n    private loaderPromise?: Promise<void>;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n        this.dsn = config.dsn || '';\n\n        window.sentryOnLoad = async () => {\n            Sentry.init({\n                sampleRate,\n                beforeSend: this.handleBeforeSend.bind(this),\n                denyUrls: [\n                    ...(config.denyUrls || []),\n                    'polyfill~checkout',\n                ],\n                integrations: [\n                    Sentry.globalHandlersIntegration({\n                        onerror: false,\n                        onunhandledrejection: true,\n                    }),\n                ],\n                ...config,\n            });\n\n            const rewriteFramesIntegration = await Sentry.lazyLoadIntegration('rewriteFramesIntegration');\n\n            Sentry.addIntegration(rewriteFramesIntegration({\n                iteratee: this.handleRewriteFrame.bind(this),\n            }));\n        };\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        this.loadSentry().then(() => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            Sentry.captureException(error, {\n                tags: { errorCode },\n                level: this.mapToSentryLevel(level),\n                extra: payload,\n                fingerprint: ['{{ default }}'],\n            });\n        });\n    }\n\n    private loadSentry(): Promise<void> {\n        if (this.loaderPromise) {\n            return this.loaderPromise;\n        }\n\n        const key = /https:\\/\\/(.+)@.+\\//.exec(this.dsn)?.[1] ?? '';\n\n        this.loaderPromise = getScriptLoader().loadScript(`https://js.sentry-cdn.com/${key}.min.js`, {\n            attributes: {\n                crossorigin: 'anonymous',\n            },\n            async: false,\n        });\n\n        return this.loaderPromise;\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX) || frame.filename?.startsWith(this.publicPath),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: ErrorEvent, hint: EventHint) => ErrorEvent | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  type ErrorLogger,\n  type ErrorLoggerOptions,\n  type ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, {\n    type ReactElement,\n    type ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst CheckoutProvider = ({ checkoutService, children }: CheckoutProviderProps): ReactElement => {\n    const [checkoutState, setCheckoutState] = useState<CheckoutSelectors>(() =>\n        checkoutService.getState(),\n    );\n    const unsubscribeRef = useRef<(() => void) | undefined>();\n\n    const contextValue = useMemo(\n        () => ({\n            checkoutService,\n            checkoutState,\n        }),\n        [checkoutService, checkoutState],\n    );\n\n    useEffect(() => {\n        unsubscribeRef.current = checkoutService.subscribe((newCheckoutState) =>\n            setCheckoutState(newCheckoutState),\n        );\n\n        return () => {\n            if (unsubscribeRef.current) {\n                unsubscribeRef.current();\n                unsubscribeRef.current = undefined;\n            }\n        };\n    }, [checkoutService]);\n\n    return <CheckoutContext.Provider value={contextValue}>{children}</CheckoutContext.Provider>;\n};\n\nexport default CheckoutProvider;\n","import { type CustomerPasswordRequirements, type ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport Input, { type InputProps } from '../Input/Input';\nimport Label from '../Label/Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            label,\n            value,\n            checked,\n            id,\n            themeV2 = false,\n            ...rest\n        }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>\n                {label}\n            </Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { type Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeOCSGooglePay = 'googlepaystripeocs',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { type CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n         \n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n     \n    return createElement(component as any, { field, ...props });\n};\n\nexport default memo(BasicFormField);\n","import { ErrorMessage } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport { BasicFormField } from '../BasicFormField';\nimport { FormFieldError } from '../FormFieldError';\nimport { Label } from '../Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label !== undefined && (typeof label === 'function' ? label(name) : label)}\n                {labelContent !== undefined && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [isFloatingLabelEnabled, input, label, name, labelContent, themeV2, id, footer],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, type SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { type CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nconst ErrorModal = ({\n    error,\n    message = error && error.message,\n    onClose = noop,\n    shouldShowErrorCode = true,\n    title = error && isCustomError(error) && error.title,\n}: ErrorModalProps): ReactElement => {\n    const aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    const handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n\n    const renderHeader = (): ReactNode => (\n        <ModalHeader>\n            <IconError\n                additionalClassName=\"icon--error modal-header-icon\"\n                size={IconSize.Small}\n            />\n            <span aria-live=\"assertive\" role=\"alert\">\n                {title || <TranslatedString id=\"common.error_heading\" />}\n            </span>\n        </ModalHeader>\n    );\n\n    const renderBody = (): ReactNode => (\n        <>\n            {error && isHtmlError(error) &&\n                <TranslatedHtml id={error.data.translationKey} />\n            }\n            {message && (\n                <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                    {message}\n                </p>\n            )}\n\n            <div className=\"optimizedCheckout-contentSecondary\">{renderErrorCode()}</div>\n        </>\n    );\n\n    const renderFooter = (): ReactNode => (\n        <Button onClick={handleOnRequestClose} size={ButtonSize.Small}>\n            <TranslatedString id=\"common.ok_action\" />\n        </Button>\n    );\n\n    const renderErrorCode = (): ReactNode => {\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    };\n\n    return (\n        <Modal\n            additionalModalClassName=\"modal--error\"\n            aria={aria}\n            footer={renderFooter()}\n            header={renderHeader()}\n            isOpen={!!error}\n            onRequestClose={handleOnRequestClose}\n        >\n            {renderBody()}\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import { type CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { type Address, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, type ObjectSchema, string, type StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    type FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n                // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { type FormField, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { type ObjectSchema } from 'yup';\n\nimport {\n    type FormFieldValues,\n    getFormFieldsValidationSchema,\n    type TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","enum DynamicFormFieldType {\n    TELEPHONE = 'tel',\n    DROPDOWM = 'dropdown',\n    NUMBER = 'number',\n    PASSWORD = 'password',\n    CHECKBOX = 'checkbox',\n    MULTILINE = 'multiline',\n    DATE = 'date',\n    RADIO = 'radio',\n    TEXT = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport Input, { type InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, themeV2 = false, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                    themeV2={themeV2}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout: string =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paymentProviderCustomer = getPaymentProviderCustomer() || undefined;\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState = paypalFastlaneCustomer.authenticationState;\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import React, { type FunctionComponent, memo } from 'react';\nimport Media, { type MediaQueryObject, type MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","/* istanbul ignore file */\n\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    themeV2?: boolean;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n    themeV2 = false,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className={classNames('multiCheckbox--controls', { 'body-regular': themeV2 })}>\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { type FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, type FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, {\n    type ChangeEvent,\n    type FunctionComponent,\n    memo,\n    type ReactNode,\n    useCallback,\n} from 'react';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\nimport { FormFieldError } from '../FormFieldError';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    themeV2?: boolean;\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n    themeV2,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                    themeV2={themeV2}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.CHECKBOX}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                themeV2={themeV2}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n    themeV2,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                themeV2={themeV2}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options, themeV2],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { type FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { type FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField } from '../FormField';\nimport { Label } from '../Label';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(() => {\n        let labelClassName = '';\n\n        if (themeV2) {\n            if (isFloatingLabelSupportedFieldType) {\n                labelClassName = 'floating-form-field-label';\n            } else {\n                labelClassName = 'body-medium';\n            }\n        }\n\n        return (\n            <Label\n                additionalClassName={labelClassName}\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        );\n    }, [themeV2, fieldInputId, isFloatingLabelSupportedFieldType, label, fieldLabel, required]);\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.NUMBER;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.TELEPHONE;\n            }\n\n            return secret ? DynamicFormFieldType.PASSWORD : DynamicFormFieldType.TEXT;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options?.rows}\n                themeV2={themeV2}\n            />\n        ),\n        [\n            fieldInputId,\n            autocomplete,\n            dynamicFormFieldType,\n            isFloatingLabelSupportedFieldType,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            themeV2,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.CHECKBOX ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                    themeV2={themeV2}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    themeV2 = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': themeV2 && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n    useMemo,\n} from 'react';\nimport { type Omit } from 'utility-types';\n\nimport { type MatchedProps } from './InjectHoc';\nimport type { MappableInjectHoc, MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import { type ReactNode, useState } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nconst Toggle = ({ openByDefault, children }: ToggleProps): ReactNode => {\n    const [isOpen, setIsOpen] = useState(Boolean(openByDefault));\n\n    const toggle = (event: Event) => {\n        event.preventDefault();\n        setIsOpen(!isOpen);\n    };\n\n    return children({ isOpen, toggle });\n};\n\nexport default Toggle;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import {\n    type Address,\n    type AddressRequestBody,\n    type BillingAddress,\n    type CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","export default function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport type EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { type ComponentType } from 'react';\n\ninterface ResolveResult {\n    name: string;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveLazyComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n    registry: Record<string, readonly TResolveId[]>,\n): ComponentType<TProps> | undefined {\n    const results: ResolveResult[] = [];\n\n    for (const [name, resolveIds] of Object.entries(registry)) {\n        for (const resolverId of resolveIds) {\n            const result = { name, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    const matchedName = matched?.name ?? results.find((result) => result.default)?.name;\n\n    if (matchedName) {\n        return components[matchedName];\n    }\n}\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    type BodlEventsPayload,\n    type BodlService,\n    type BraintreeAnalyticTrackerService,\n    type CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    type PayPalCommerceAnalyticTrackerService,\n    type StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { type AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, useEffect } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nconst CheckoutButton = ({\n    containerId,\n    methodId,\n    isShowingWalletButtonsOnTop,\n    deinitialize,\n    initialize,\n    onError,\n    onClick = noop,\n}: CheckoutButtonProps): ReactElement => {\n    useEffect(() => {\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n\n        return () => {\n            deinitialize({ methodId });\n        };\n    }, []);\n\n    return <div data-test={containerId} id={containerId} />;\n};\n\nexport default CheckoutButton;\n","import {\n    type ExtensionAction,\n    ExtensionActionType,\n    type ExtensionState,\n} from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useReducer } from 'react';\n\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingStepHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingStep> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingStep,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { type QueryHandler, type QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    type CheckoutService,\n    type Extension,\n    type ExtensionCommandMap,\n    type ExtensionQueryMap,\n    type ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport type React from 'react';\n\nimport { ErrorLevelType, type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { type ExtensionAction } from './ExtensionProvider';\nimport { type CommandHandler, type QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref } from 'react';\n\nimport Input, { type InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    type CardInstrument,\n    type CustomerAddress,\n    type PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import React, { type FunctionComponent, type ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import {\n    type CheckoutPayment,\n    type GiftCertificateOrderPayment,\n    type OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n    pseudoElementSelector?: string,\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element, pseudoElementSelector);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { type CheckoutPayment, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import classNames from 'classnames';\nimport React, { type FieldsetHTMLAttributes, forwardRef, type ReactNode, type Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport { Input, type InputProps } from '../Input';\nimport { Label } from '../Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, themeV2, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    { 'floating-form-field-input': themeV2 },\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst OrderConfirmationPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"line-1\" />\n                <div className=\"line-2\" />\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst OrderConfirmationPageSkeletonMobile: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton-mobile\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"text\">\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t1\" />\n                        <div className=\"animated-grey-box t2\" />\n                    </div>\n                    <div className=\"animated-grey-box first-line\" />\n                    <div className=\"animated-grey-box\" />\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t3\" />\n                        <div className=\"animated-grey-box t4\" />\n                    </div>\n                </div>\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <div className=\"cartDrawer optimizedCheckout-orderSummary\">\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst OrderConfirmationPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? (\n        <OrderConfirmationPageSkeletonMobile />\n    ) : (\n        <OrderConfirmationPageSkeletonDesktop />\n    );\n};\n\nexport default OrderConfirmationPageSkeleton;\n","// copied from core package\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n\nlet query: MediaQueryList;\n\nexport function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { type Address, type Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    loadingSkeleton,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    const loadingUI = loadingSkeleton || <LoadingSpinner isLoading={true} />;\n\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                {isLoading ? loadingUI : null}\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import { createContext, useContext } from 'react';\n\nexport interface ThemeContextProps {\n    themeV2: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useThemeContext = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error('useThemeContext must be used within an <ThemeContextProvider>');\n    }\n\n    return themeContext;\n};\n\nexport default ThemeContext;\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { type SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { type Address, type CheckoutPayment, type FormField } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    type Address,\n    type CheckoutSelectors,\n    type Country,\n    type ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { themeV2 } = useThemeContext();\n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { type CurrencyService, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { type LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { type MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, themeV2 = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': themeV2 && !isMultiShippingSummary },\n            { 'sub-text': themeV2 && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': themeV2 && !isMultiShippingSummary },\n            { 'sub-text-bold': themeV2 && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, themeV2, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import {\n    createLanguageService,\n    type LanguageConfig,\n    type LanguageService,\n} from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { type CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import React, { type FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import React, { type ReactNode } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport ThemeContext from './ThemeContext';\n\nexport interface ThemeProviderProps {\n    children?: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let useNewTheme = false;\n\n    if (config) {\n        useNewTheme = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    const themeV2 =\n        (window.location.search && window.location.search.includes('v2')) || useNewTheme;\n\n    return <ThemeContext.Provider value={{ themeV2 }}>{children}</ThemeContext.Provider>;\n};\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { type CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n    fallbackValue = true\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? fallbackValue);\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { createContext } from 'react';\n\nimport { type ExtensionState } from './ExtensionProvider';\nimport { type ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    PaymentPaymentMethodListBefore = 'extension-region-payment-paymentmethodlist-before',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> =\n    {\n        [ExtensionRegion.ShippingShippingAddressFormBefore]:\n            ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n        [ExtensionRegion.ShippingShippingAddressFormAfter]:\n            ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n        [ExtensionRegion.ShippingSelectedShippingMethod]:\n            ExtensionRegionContainer.ShippingSelectedShippingMethod,\n        [ExtensionRegion.PaymentPaymentMethodListBefore]:\n            ExtensionRegionContainer.PaymentPaymentMethodListBefore,\n        [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n        [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n        [ExtensionRegion.GlobalWebWorker]: '',\n    };\n","import { type ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, type KeyboardEvent, type MouseEvent, type ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { type Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import {\n    type CheckoutService,\n    createCurrencyService,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { type ReactNode, useEffect, useMemo, useState } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst LocaleProvider: React.FC<LocaleProviderProps> = ({ checkoutService, children }) => {\n    const [config, setConfig] = useState<StoreConfig | undefined>();\n    const languageService = useMemo(() => getLanguageService(), []);\n\n    const getContextValue = memoizeOne((storeConfig?: StoreConfig) => {\n        return {\n            currency: storeConfig ? createCurrencyService(storeConfig) : undefined,\n            date: storeConfig\n                ? {\n                      inputFormat: storeConfig.inputDateFormat,\n                  }\n                : undefined,\n            language: languageService,\n        };\n    });\n\n    useEffect(() => {\n        const unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                setConfig(data.getConfig());\n            },\n            ({ data }) => data.getConfig(),\n        );\n\n        return () => {\n            unsubscribe();\n        };\n    }, [checkoutService]);\n\n    const contextValue = useMemo(() => getContextValue(config), [config, getContextValue]);\n\n    return <LocaleContext.Provider value={contextValue}>{children}</LocaleContext.Provider>;\n};\n\nexport default LocaleProvider;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: unknown): void;\n}\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return createElement(component as any, { field, ...props });\n};\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={form.getFieldMeta(field.name)}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\nexport default memo(BasicFormField);\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import React, { type FunctionComponent } from 'react';\n\nexport const CartSummarySkeleton: FunctionComponent = () => (\n    <aside className=\"layout-cart\">\n        <article className=\"cart optimizedCheckout-orderSummary checkout-page-skeleton checkout-page-skeleton--cart\">\n            <div className=\"item--first\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n            </div>\n            <div className=\"item--product\">\n                <div className=\"figure\" />\n                <div className=\"name\" />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--coupon\">\n                <div />\n            </div>\n            <div className=\"item--total\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--tax\">\n                <div />\n            </div>\n            <div className=\"item--last\">\n                <div />\n                <div />\n            </div>\n        </article>\n    </aside>\n);\n"],"names":["children","className","hidden","testId","isFloatingLabelEnabled","additionalClassName","rest","IconSize","withIconContainer","OriginalComponent","memo","size","Small","Large","Medium","A","displayNamePrefix","hasSelectedShippingOptions","consignments","length","every","consignment","selectedShippingOption","id","type","CustomError","Error","constructor","data","message","title","name","super","captureStackTrace","this","stack","setDefaultValues","defaultError","defaultTitle","ref","useRef","containerRef","createRef","focusOnError","current","erroredFormField","querySelector","join","focus","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","useCallback","memoizeOne","setSubmitted","setTimeout","renderContent","noValidate","onSubmitCapture","values","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","mapCustomFormFieldsFromFormValues","customFieldsObject","customFields","forIn","value","key","fieldValue","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","push","fieldId","NoopCheckoutSupport","isSupported","EmbeddedCheckoutUnsupportedError","prototype","EmbeddedCheckoutSupport","unsupportedMethods","langService","ids","filter","includes","translate","methods","UNSUPPORTED_METHODS","CheckoutPageSkeletonDesktop","CartSummarySkeleton","CheckoutPageSkeletonMobile","isMobileView","isLoading","role","TranslatedString","waitInterval","loginUrl","isWaiting","setIsWaiting","useState","useEffect","waitToken","clearTimeout","LoadingOverlay","hideContentWhenLoading","TranslatedHtml","CustomerViewType","buttonsCount","skeleton","Array","fill","map","_v","i","LoadingSkeleton","renderWhileLoading","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","methodId","AmazonPayV2Button","lazy","then","module","default","BigCommercePaymentsButton","BigcommercePaymentsPayLaterButton","CheckoutButton","GooglePayButton","PayPalCommerceCreditButton","PayPalCommerceButton","StripeLinkV2Button","ComponentRegistry","resolveCheckoutButton","resolveId","components","resolveLazyComponent","ApplePayButton","isShowingWalletButtonsOnTop","onError","Suspense","containerId","paypalCommerceIds","withCheckout","checkoutState","checkoutService","getConfig","getCustomer","isPaymentDataRequired","statuses","isInitializedCustomer","errors","getInitializeCustomerError","config","providers","checkoutSettings","remoteCheckoutProviders","availableMethodIds","customer","isGuest","Boolean","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","language","themeV2","error","style","position","left","top","undefined","isPayPalCommerce","ResolvedCheckoutButton","deinitialize","deinitializeCustomer","initialize","initializeCustomer","onClick","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","analyticsTracker","useAnalytics","bolt","onInit","hasBoltAccount","email","customerSuggestionInit","event","stopPropagation","fn","provider","providerFlow","Button","IconBolt","getCheckout","checkout","providerWithCustomCheckout","handleExecutePaymentMethodCheckout","options","customerSuggestionExecute","PaymentMethodId","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","payments","payment","providerId","getBillingAddress","isSigningOut","billingAddress","links","checkoutLink","logoutLink","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","assign","isCartEmpty","reload","isErrorWithType","Tiny","variant","Secondary","hideText","isInitializing","supportedMethodIds","LazyContainer","EMAIL_REGEXP","getEmailValidationSchema","max","matches","required","getTranslateCreateCustomerError","label","min","memoize","formFields","passwordRequirements","description","numeric","alpha","minLength","firstName","lastName","password","concat","getCustomFormFieldsValidationSchema","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","handleSubmit","props","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","find","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","createAccountError","isCreatingAccount","onCancel","createAccountErrorMessage","useMemo","isRequestError","status","splitMessage","split","trim","fields","field","updatedItems","items","item","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","custom","disabled","Primary","href","preventDefault","translatedString","parsedString","parseAnchor","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","result","render","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","isExpressPrivacyPolicy","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","String","Label","htmlFor","SubscribeSessionStorage","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","onContinueAsGuest","privacyPolicyUrl","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","setFieldValue","renderField","fieldProps","loginLink","legend","Legend","BasicFormField","tabIndex","viewBox","xmlns","d","Toggle","openByDefault","toggle","RedirectToStorefrontLogin","isDisabled","onSignIn","isBuyNowCart","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","Info","CancellableEnforcedLogin","EnforcedLogin","rel","target","setStatus","valSuccess","step","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","container","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","document","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","Customer","Component","state","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","setState","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","mapCreateAccountFromFormValues","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","customerEmailEntry","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","payload","componentDidMount","onReady","componentWillUnmount","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","customerPaymentMethodExecuted","withAnalytics","getCustomerAccountFields","getCart","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","cart","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","source","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","height","width","icon","dangerouslySetInnerHTML","__html","sanitize","promotions","banners","reduce","promotion","banner","index","text","compactView","isShippingDiscountDisplayEnabled","paypalFastlaneAddresses","usePayPalFastlaneAddress","shippingAddress","address","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","method","shippingCostAfterDiscount","getShippingCostAfterAutomaticDiscount","cost","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","lineItems","findLineItems","address1","address2","city","localizedProvince","localizedCountry","postalCode","count","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingSummary","isMultiShippingMode","ShippingOptionExpiredError","getLanguageService","heading","isActive","isEditable","onEdit","summary","isBusy","suggestion","onExpanded","isClosed","setIsClosed","contentRef","timeoutRef","timeoutDelay","getParentContainer","parentElement","classList","contains","focusStep","delay","parseFloat","getComputedStyle","transitionDuration","getChildInput","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","getScrollPosition","isNaN","scrollTo","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","CheckoutStepType","physicalItems","some","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","getBillingAddressFields","countryCode","billingAddressFields","hasAddress","isValidAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","isExperimentEnabled","startsWith","getShippingStepStatus","getShippingAddress","getConsignments","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","hasUnassignedLineItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","retry","CartSummary","CartSummaryDrawer","Checkout","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","trackStepCompleted","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","trackStepViewed","handleUnhandledError","handleError","errorLogger","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","exitCheckout","handleWalletButtonClick","methodName","walletButtonClick","unsubscribeFromConsignments","removeEventListener","createEmbeddedMessenger","embeddedStylesheet","extensionService","loadPaymentMethodByIds","subscribeToConsignments","supportedProviders","configs","getPaymentMethods","preloadExtensions","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","prerendering","checkoutBegin","once","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","isUsingMultiShipping","OrderConfirmationPageSkeleton","errorModal","isCustomError","ErrorModal","onClose","isPending","extensionState","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","setIsMultishippingMode","StaticBillingAddress","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","Extension","region","withExtension","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscribe","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","loadCheckout","useLoadCheckout","checkoutId","setIsLoadingCheckout","useExtensions","fetchDataWithRetry","maxRetries","attemptFetch","attemptSequence","all","params","include","loadExtensions","resolve","catch","CheckoutPage","sentryConfig","publicPath","sentrySampleRate","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createEmbeddedCheckoutSupport","createErrorLogger","sentry","errorTypes","sampleRate","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","ThemeProvider","createEmbeddedCheckoutMessenger","ErrorLevelType","getDerivedStateFromError","componentDidCatch","errorCode","fallback","FormContext","createContext","isSubmitted","FormProvider","initialIsSubmitted","contextValue","Provider","isFunction","total","lineItemIds","addedByPromotion","AccountService","requestSender","createRequestSender","create","put","response","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isGiftCertificatePayment","isStoreCreditPayment","gatewayPayment","detail","instructions","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","Success","MandateTextComponent","mandateText","Object","keys","entries","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","features","hasDigitalItems","isDownloadable","ContinueButton","action","mapFromPayments","amount","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","OrderSummaryContainer","currency","shopperCurrency","headerLink","storeCurrency","orderAmount","OrderConfirmationPage","hasSignedUp","onErrorModalClose","paymentInstructions","shouldShowPasswordForm","customerId","shouldShowErrorCode","OrderConfirmation","setError","setHasSignedUp","setIsSigningUp","embeddedMessengerRef","isLoadingOrder","loadOrder","e","orderPurchased","storeProfile","orderEmail","storePhoneNumber","err","accountService","newsletter","forwardRef","appearFocused","schema","fieldType","maxValue","minValue","nullable","transform","originalValue","CHECKBOX","requiredErrorMessage","query","matchMedia","AlertType","describedBy","useId","Warning","IconError","renderDefaultIcon","placeholder","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","imageUrl","alt","src","transitTime","additionalDescription","ShopperCurrency","lastPathName","pop","URLSearchParams","search","get","toCustomerCurrency","rows","content","itemId","isNil","parentId","createInjectHoc","LocaleContext","pickProps","ReactDatePicker","date","inputDateFormat","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","DROPDOWM","optionValue","RADIO","RadioInput","CheckboxInput","isArray","DATE","calendarClassName","dateFormat","maxDate","Date","minDate","placeholderText","toUpperCase","popperClassName","selected","MULTILINE","PASSWORD","ContextComponent","InnerDecoratedComponent","DecoratedComponent","context","useContext","injectedProps","pickBy","isEmpty","mergedProps","displayName","customError","mapAddressToFormValues","addressFormValues","defaultValue","fieldName","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","getDefaultValue","year","month","day","Number","errorId","kebabCase","ConsoleErrorLogger","console","customConsole","tags","level","meta","info","warn","NoopErrorLogger","FILENAME_PREFIX","SeverityLevelEnum","SentryErrorLogger","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","dsn","sentryOnLoad","Sentry","init","beforeSend","bind","denyUrls","integrations","globalHandlersIntegration","onerror","onunhandledrejection","rewriteFramesIntegration","lazyLoadIntegration","addIntegration","iteratee","loadSentry","computeErrorCode","captureException","mapToSentryLevel","extra","fingerprint","loaderPromise","exec","getScriptLoader","loadScript","attributes","crossorigin","async","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","setCheckoutState","getState","unsubscribeRef","newCheckoutState","getPasswordRequirementsFromConfig","minlength","allSlashes","shouldShowChildren","discountTotal","DEFAULT_OPTIONS","interval","InnerField","component","InnerFieldInput","hasError","prevForm","prevField","prevProps","nextForm","nextField","nextProps","prevValueRef","getTime","createElement","renderInnerField","renderMessage","Consumer","handleOnRequestClose","nativeEvent","renderErrorCode","headers","aria","labelledby","shouldBeTranslatedAsHtml","isHtmlError","translationKey","isValidSync","WHITELIST_REGEXP","maxLength","getTranslateAddressError","requiredFieldErrorTranslationIds","company","phone","getFormFieldsValidationSchema","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","addresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","analyticsContext","CheckoutContext","useCheckout","queries","mobile","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","forEach","val","handleSelectNone","handleInputChange","indexOf","FormFieldContainer","DynamicInput","FormFieldError","renderProps","pick","secret","fieldLabel","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","labelClassName","dynamicFormFieldType","NUMBER","TELEPHONE","TEXT","helperLabel","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","setIsOpen","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","normalizeAddress","omit","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","getNestedValue","obj","path","acc","formikContext","touched","ADD_ATTR","toCSSRule","selector","mergedStyles","EmbeddedCheckoutStyleParser","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","checkbox","radio","checklist","discountBanner","loadingBanner","orderSummary","EmbeddedCheckoutStylesheet","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","registry","results","resolveIds","resolverId","sort","a","b","matchedName","quantity","createAnalyticsService","createFn","createArguments","getStepTracker","createStepTracker","getBodlService","createBodlService","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","trackCheckoutStarted","currentStep","stepCompleted","trackOrderComplete","showShippingMethods","selectedPaymentMethod","clickPayButton","paymentRejected","paymentComplete","AnalyticsContext","heightOption","buttonHeight","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createReRenderShippingStepHandler","ReRenderShippingStep","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","postMessageToExtension","ExtensionService","handlers","extensions","getExtensions","cartId","URL","searchParams","set","as","renderExtension","getExtensionByRegion","registerHandlers","extensionId","removeListeners","clearExtensionCache","removers","remover","isRegionEnabled","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","useReducer","extensionValues","ExtensionContext","isPayPalFastlaneCustomer","filterError","element","pseudoElementSelector","declaration","propertyName","getPropertyValue","extensionContext","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","OrderConfirmationPageSkeletonDesktop","OrderConfirmationPageSkeletonMobile","MOBILE_MAX_WIDTH","countries","country","states","subdivisions","unmountContentWhenLoading","loadingUI","ThemeContext","useThemeContext","themeContext","showPayPalFastlaneLabel","getBillingCountries","useLocale","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","div","innerHTML","anchor","anchorSiblings","outerHTML","EMPTY_ARRAY","freeze","renderItemContent","option","renderProductOptionDetails","SMALL_SCREEN_MAX_WIDTH","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","FALLBACK_LOCALE","languageService","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","setPrototypeOf","object","__proto__","useNewTheme","experimentName","fallbackValue","call","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","PaymentPaymentMethodListBefore","SummaryAfter","SummaryLastItemAfter","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","setConfig","getContextValue","storeConfig","createCurrencyService","unsubscribe","getFieldMeta"],"sourceRoot":""}
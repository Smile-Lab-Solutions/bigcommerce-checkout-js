{"version":3,"file":"checkout-f92ea6d1.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/form/Label/Label.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/ui/src/form/TextInput/TextInput.tsx","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePaymentsPayLater/BigcommercePaymentsPayLaterButton.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/ui/src/form/Input/Input.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/icon/IconChevronDown.tsx","webpack://checkout/./packages/ui/src/form/TextArea/TextArea.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicInput.tsx","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/RadioInput/RadioInput.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/ui/src/form/FormFieldError/FormFieldError.tsx","webpack://checkout/./packages/ui/src/form/FormField/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormFieldType.ts","webpack://checkout/./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/stripe-integration/src/stripe-ocs/StripeLinkV2Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerceCredit/PayPalCommerceCreditButton.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/MultiCheckboxControl.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/CheckboxGroupFormField.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveLazyComponent.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingStepHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/ui/src/form/CheckboxInput/CheckboxInput.tsx","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/OrderConfirmationPageSkeleton.tsx","webpack://checkout/./packages/ui/src/utils/isMobileView.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerce/PayPalCommerceButton.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/ui/src/context/ThemeContext.tsx","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/ui/src/form/FormFieldContainer/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CheckoutPageSkeleton.tsx","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/generated/checkoutButtons/lazy.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/RedirectToStorefrontLogin.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutPage.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/hooks/useLoadCheckout.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutIntermediate.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePayments/BigCommercePaymentsButton.tsx","webpack://checkout/./packages/ui/src/context/ThemeProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/ui/src/form/BasicFormField/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CartSummarySkeleton.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        {...rest}\n        className={classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        )}\n        data-test={testId}\n    >\n        {children}\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import type { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        // Adding errorCode with value `ErrorBoundary` to collect usage statistics of ErrorBoundary\n        if (logger) {\n            logger.log(error, {\n                errorCode: 'ErrorBoundary',\n            });\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport { Input, InputProps } from '../Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.CHECKBOX) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.CHECKBOX\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigcommercePaymentsPayLaterButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigcommercePaymentsPayLaterButton,\n    [{ id: 'bigcommerce_payments_paylater' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled &&\n                            !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n\n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': themeV2 })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': themeV2 })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\nexport default function isBuyNowCart(cart?: Cart): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n    const params = new URLSearchParams(window.location.search);\n\n    return (\n        cart?.source === 'BUY_NOW' ||\n        params.get('action') === 'buy' ||\n        !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout')\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(<div key={`checklist-skeleton-item${i}`} />);\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <>\n            <div className=\"address-form-skeleton\">\n                <div className=\"label\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name\" />\n                <div className=\"name\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"address\" />\n            </div>\n        </>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, lazy, memo, Suspense, useCallback } from 'react';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../../icon';\nimport { CheckboxInput } from '../CheckboxInput';\nimport { InputProps } from '../Input';\nimport { RadioInput } from '../RadioInput';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\n\nconst ReactDatePicker = lazy(\n    () =>\n        import(\n            /* webpackChunkName: \"react-datepicker\" */\n            'react-datepicker'\n        ),\n);\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    inputDateFormat?: string;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    value,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n    date,\n    inputDateFormat,\n    ...rest\n}) => {\n    const inputFormat = inputDateFormat || date.inputFormat || '';\n\n    const handleDateChange = useCallback(\n        (dateValue: string, event: any) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.DROPDOWM:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}\n                    >\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                            { 'floating-form-field-input': themeV2 },\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value ?? ''}\n                    >\n                        {!!placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.RADIO:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.CHECKBOX:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.DATE:\n            return (\n                <Suspense>\n                    <ReactDatePicker\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        {...(rest as any)}\n                        autoComplete=\"off\"\n                        // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                        // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                        // onChangeRaw={ rest.onChange }\n                        calendarClassName=\"optimizedCheckout-contentPrimary\"\n                        className={classNames('form-input optimizedCheckout-form-input', {\n                            'floating-input': isFloatingLabelEnabled,\n                            'floating-form-field-input': themeV2,\n                        })}\n                        dateFormat={inputFormat}\n                        maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                        minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                        name={name}\n                        onChange={handleDateChange}\n                        placeholderText={inputFormat.toUpperCase()}\n                        popperClassName=\"optimizedCheckout-contentPrimary\"\n                        selected={isDate(value) ? value : undefined}\n                    />\n                </Suspense>\n            );\n\n        case DynamicFormFieldType.MULTILINE:\n            return (\n                <TextArea\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.PASSWORD ? 'password' : 'text'\n                    }`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.DATE && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.DATE) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.CHECKBOX) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    themeV2?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import { getScriptLoader } from '@bigcommerce/script-loader';\nimport type {\n    BrowserOptions,\n    ErrorEvent,\n    EventHint,\n    Exception,\n    SeverityLevel,\n    StackFrame,\n} from '@sentry/browser';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n    private dsn: string;\n    private loaderPromise?: Promise<void>;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n        this.dsn = config.dsn || '';\n\n        window.sentryOnLoad = async () => {\n            Sentry.init({\n                sampleRate,\n                beforeSend: this.handleBeforeSend.bind(this),\n                denyUrls: [\n                    ...(config.denyUrls || []),\n                    'polyfill~checkout',\n                ],\n                integrations: [\n                    Sentry.globalHandlersIntegration({\n                        onerror: false,\n                        onunhandledrejection: true,\n                    }),\n                ],\n                ...config,\n            });\n\n            const rewriteFramesIntegration = await Sentry.lazyLoadIntegration('rewriteFramesIntegration');\n\n            Sentry.addIntegration(rewriteFramesIntegration({\n                iteratee: this.handleRewriteFrame.bind(this),\n            }));\n        };\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        this.loadSentry().then(() => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            Sentry.captureException(error, {\n                tags: { errorCode },\n                level: this.mapToSentryLevel(level),\n                extra: payload,\n                fingerprint: ['{{ default }}'],\n            });\n        });\n    }\n\n    private loadSentry(): Promise<void> {\n        if (this.loaderPromise) {\n            return this.loaderPromise;\n        }\n\n        const key = /https:\\/\\/(.+)@.+\\//.exec(this.dsn)?.[1] ?? '';\n\n        this.loaderPromise = getScriptLoader().loadScript(`https://js.sentry-cdn.com/${key}.min.js`, {\n            attributes: {\n                crossorigin: 'anonymous',\n            },\n            async: false,\n        });\n\n        return this.loaderPromise;\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX) || frame.filename?.startsWith(this.publicPath),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: ErrorEvent, hint: EventHint) => ErrorEvent | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { CartSummarySkeleton, LazyContainer, OrderConfirmationPageSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { isExperimentEnabled, retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency, checkoutSettings } = config;\n\n        const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n            checkoutSettings,\n            'PROJECT-6643.enable_shipping_discounts_in_orders',\n        );\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\n                                <ThemeProvider>\n                                    <OrderConfirmation\n                                        {...this.props}\n                                        createAccount={this.createAccount}\n                                        createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                        embeddedStylesheet={this.embeddedStylesheet}\n                                        errorLogger={this.errorLogger}\n                                    />\n                                </ThemeProvider>\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactElement, ReactNode, useEffect, useMemo, useRef, useState } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst CheckoutProvider = ({ checkoutService, children }: CheckoutProviderProps): ReactElement => {\n    const [checkoutState, setCheckoutState] = useState<CheckoutSelectors>(() =>\n        checkoutService.getState(),\n    );\n    const unsubscribeRef = useRef<(() => void) | undefined>();\n\n    const contextValue = useMemo(\n        () => ({\n            checkoutService,\n            checkoutState,\n        }),\n        [checkoutService, checkoutState],\n    );\n\n    useEffect(() => {\n        unsubscribeRef.current = checkoutService.subscribe((newCheckoutState) =>\n            setCheckoutState(newCheckoutState),\n        );\n\n        return () => {\n            if (unsubscribeRef.current) {\n                unsubscribeRef.current();\n                unsubscribeRef.current = undefined;\n            }\n        };\n    }, [checkoutService]);\n\n    return <CheckoutContext.Provider value={contextValue}>{children}</CheckoutContext.Provider>;\n};\n\nexport default CheckoutProvider;\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from '../Input/Input';\nimport Label from '../Label/Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            label,\n            value,\n            checked,\n            id,\n            themeV2 = false,\n            ...rest\n        }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>\n                {label}\n            </Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import { Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeOCSGooglePay = 'googlepaystripeocs',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport { BasicFormField } from '../BasicFormField';\nimport { FormFieldError } from '../FormFieldError';\nimport { Label } from '../Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label !== undefined && (typeof label === 'function' ? label(name) : label)}\n                {labelContent !== undefined && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [isFloatingLabelEnabled, input, label, name, labelContent, themeV2, id, footer],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { ReactElement, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nconst ErrorModal = ({\n    error,\n    message = error && error.message,\n    onClose = noop,\n    shouldShowErrorCode = true,\n    title = error && isCustomError(error) && error.title,\n}: ErrorModalProps): ReactElement => {\n    const aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    const handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n\n    const renderHeader = (): ReactNode => (\n        <ModalHeader>\n            <IconError\n                additionalClassName=\"icon--error modal-header-icon\"\n                size={IconSize.Small}\n            />\n            <span aria-live=\"assertive\" role=\"alert\">\n                {title || <TranslatedString id=\"common.error_heading\" />}\n            </span>\n        </ModalHeader>\n    );\n\n    const renderBody = (): ReactNode => (\n        <>\n            {error && isHtmlError(error) &&\n                <TranslatedHtml id={error.data.translationKey} />\n            }\n            {message && (\n                <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                    {message}\n                </p>\n            )}\n\n            <div className=\"optimizedCheckout-contentSecondary\">{renderErrorCode()}</div>\n        </>\n    );\n\n    const renderFooter = (): ReactNode => (\n        <Button onClick={handleOnRequestClose} size={ButtonSize.Small}>\n            <TranslatedString id=\"common.ok_action\" />\n        </Button>\n    );\n\n    const renderErrorCode = (): ReactNode => {\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    };\n\n    return (\n        <Modal\n            additionalModalClassName=\"modal--error\"\n            aria={aria}\n            footer={renderFooter()}\n            header={renderHeader()}\n            isOpen={!!error}\n            onRequestClose={handleOnRequestClose}\n        >\n            {renderBody()}\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name}));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n                // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","enum DynamicFormFieldType {\n    TELEPHONE = 'tel',\n    DROPDOWM = 'dropdown',\n    NUMBER = 'number',\n    PASSWORD = 'password',\n    CHECKBOX = 'checkbox',\n    MULTILINE = 'multiline',\n    DATE = 'date',\n    RADIO = 'radio',\n    TEXT = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport { isHTMLElement } from '@bigcommerce/checkout/instrument-utils';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\n\n    if (container) {\n        const amazonButton = container.shadowRoot?.querySelector('.amazonpay-button-view1');\n\n        if (isHTMLElement(amazonButton)) {\n            amazonButton.style.height = '36px';\n\n            return;\n        }\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n};\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    AmazonPayV2Button,\n    [{ id: 'amazonpay' }],\n);\n","export default function isHTMLElement(element: unknown): element is HTMLElement {\n    return element instanceof HTMLElement;\n}\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst StripeLinkV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        loadingContainerId: 'checkout-app',\n        methodId: 'optimized_checkout',\n        gatewayId: 'stripeocs',\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    StripeLinkV2Button,\n    [{ id: 'stripeocs' }],\n);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, themeV2 = false, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                    themeV2={themeV2}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout: string =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paymentProviderCustomer = getPaymentProviderCustomer() || undefined;\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState = paypalFastlaneCustomer.authenticationState;\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceCreditButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { onUnhandledError } = props;\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceCreditButton,\n    [{ id: 'paypalcommercecredit' }],\n);\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","/* istanbul ignore file */\n\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    themeV2?: boolean;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n    themeV2 = false,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className={classNames('multiCheckbox--controls', { 'body-regular': themeV2 })}>\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\nimport { FormFieldError } from '../FormFieldError';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    themeV2?: boolean;\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n    themeV2,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                    themeV2={themeV2}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.CHECKBOX}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                themeV2={themeV2}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n    themeV2,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                themeV2={themeV2}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options, themeV2],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField } from '../FormField';\nimport { Label } from '../Label';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(() => {\n        let labelClassName = '';\n\n        if (themeV2) {\n            if (isFloatingLabelSupportedFieldType) {\n                labelClassName = 'floating-form-field-label';\n            } else {\n                labelClassName = 'body-medium';\n            }\n        }\n\n        return (\n            <Label\n                additionalClassName={labelClassName}\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        );\n    }, [themeV2, fieldInputId, isFloatingLabelSupportedFieldType, label, fieldLabel, required]);\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.NUMBER;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.TELEPHONE;\n            }\n\n            return secret ? DynamicFormFieldType.PASSWORD : DynamicFormFieldType.TEXT;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options?.rows}\n                themeV2={themeV2}\n            />\n        ),\n        [\n            fieldInputId,\n            autocomplete,\n            dynamicFormFieldType,\n            isFloatingLabelSupportedFieldType,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            themeV2,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.CHECKBOX ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                    themeV2={themeV2}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    themeV2 = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': themeV2 && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import { ReactNode, useState } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nconst Toggle = ({ openByDefault, children }: ToggleProps): ReactNode => {\n    const [isOpen, setIsOpen] = useState(Boolean(openByDefault));\n\n    const toggle = (event: Event) => {\n        event.preventDefault();\n        setIsOpen(!isOpen);\n    };\n\n    return children({ isOpen, toggle });\n};\n\nexport default Toggle;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","export default function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({isSubmitted}) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport './GooglePayButton.scss';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton checkoutButtonContainerClass=\"google-pay-top-button\" {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n        { id: 'googlepaystripeocs' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { ComponentType } from 'react';\n\ninterface ResolveResult {\n    name: string;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveLazyComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n    registry: Record<string, readonly TResolveId[]>,\n): ComponentType<TProps> | undefined {\n    const results: ResolveResult[] = [];\n\n    for (const [name, resolveIds] of Object.entries(registry)) {\n        for (const resolverId of resolveIds) {\n            const result = { name, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    const matchedName = matched?.name ?? results.find((result) => result.default)?.name;\n\n    if (matchedName) {\n        return components[matchedName];\n    }\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { ReactElement, useEffect } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nconst CheckoutButton = ({\n    containerId,\n    methodId,\n    isShowingWalletButtonsOnTop,\n    deinitialize,\n    initialize,\n    onError,\n    onClick = noop,\n}: CheckoutButtonProps): ReactElement => {\n    useEffect(() => {\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n\n        return () => {\n            deinitialize({ methodId });\n        };\n    }, []);\n\n    return <div data-test={containerId} id={containerId} />;\n};\n\nexport default CheckoutButton;\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingStepHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingStep> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingStep,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { QueryHandler, QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionQueryMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLevelType, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport { CommandHandler, QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n    pseudoElementSelector?: string,\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element, pseudoElementSelector);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport { Input, InputProps } from '../Input';\nimport { Label } from '../Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, themeV2, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    { 'floating-form-field-input': themeV2 },\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    checkoutButtonContainerClass,\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n    additionalInitializationOptions,\n}) => {\n    const initializeCustomerStrategyOrThrow = async () => {\n        try {\n            await initializeCustomer({\n                methodId,\n                [methodId]: {\n                    container: containerId,\n                    onUnhandledError,\n                    onClick: () => onWalletButtonClick(methodId),\n                    ...additionalInitializationOptions,\n                },\n            });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    const deinitializeCustomerStrategyOrThrow = async () => {\n        try {\n            await deinitializeCustomer({ methodId });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        void initializeCustomerStrategyOrThrow();\n\n        return () => {\n            void deinitializeCustomerStrategyOrThrow();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className={checkoutButtonContainerClass} data-test={containerId} id={containerId} />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst OrderConfirmationPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"line-1\" />\n                <div className=\"line-2\" />\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst OrderConfirmationPageSkeletonMobile: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton-mobile\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"text\">\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t1\" />\n                        <div className=\"animated-grey-box t2\" />\n                    </div>\n                    <div className=\"animated-grey-box first-line\" />\n                    <div className=\"animated-grey-box\" />\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t3\" />\n                        <div className=\"animated-grey-box t4\" />\n                    </div>\n                </div>\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <div className=\"cartDrawer optimizedCheckout-orderSummary\">\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst OrderConfirmationPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? (\n        <OrderConfirmationPageSkeletonMobile />\n    ) : (\n        <OrderConfirmationPageSkeletonDesktop />\n    );\n};\n\nexport default OrderConfirmationPageSkeleton;\n","// copied from core package\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n\nlet query: MediaQueryList;\n\nexport function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { onUnhandledError } = props;\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceButton,\n    [{ id: 'paypalcommerce' }],\n);\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    loadingSkeleton,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    const loadingUI = loadingSkeleton || <LoadingSpinner isLoading={true} />;\n\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                {isLoading ? loadingUI : null}\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import { createContext, useContext } from 'react';\n\nexport interface ThemeContextProps {\n    themeV2: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useThemeContext = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error('useThemeContext must be used within an <ThemeContextProvider>');\n    }\n\n    return themeContext;\n};\n\nexport default ThemeContext;\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { themeV2 } = useThemeContext();\n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, themeV2 = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': themeV2 && !isMultiShippingSummary },\n            { 'sub-text': themeV2 && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': themeV2 && !isMultiShippingSummary },\n            { 'sub-text-bold': themeV2 && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, themeV2, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.includes(id));\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst CheckoutPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\" data-test=\"checkout-page-skeleton\">\n        <div className=\"layout-main\">\n            <div className=\"checkout-steps checkout-page-skeleton\">\n                <div className=\"title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"subscription\">\n                    <div className=\"checkbox\" />\n                    <div className=\"description\" />\n                </div>\n                <div className=\"terms--1\" />\n                <div className=\"terms--2\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst CheckoutPageSkeletonMobile: FunctionComponent = () => (\n    <div\n        className=\"layout optimizedCheckout-contentPrimary\"\n        data-test=\"checkout-page-skeleton-mobile\"\n    >\n        <div className=\"layout-main \">\n            <div className=\"checkout-page-skeleton\">\n                <div className=\"walletbutton--tagline\" />\n                <div className=\"walletbutton\" />\n                <div className=\"walletbutton--divider\" />\n                <div className=\"mobile-title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"textbox\" />\n                <div className=\"terms--1\" />\n                <div className=\"mobile-title--2\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--3\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--4\" />\n                <div className=\"divider\" />\n                <div className=\"divider\" />\n            </div>\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CheckoutPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? <CheckoutPageSkeletonMobile /> : <CheckoutPageSkeletonDesktop />;\n};\n\nexport default CheckoutPageSkeleton;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\nconst EmptyCartMessage = ({ waitInterval, loginUrl }: EmptyCartMessageProps): ReactElement => {\n    const [isWaiting, setIsWaiting] = useState(true);\n\n    useEffect(() => {\n        const waitToken = setTimeout(() => {\n            setIsWaiting(false);\n        }, waitInterval);\n\n        return () => {\n            clearTimeout(waitToken);\n        };\n    }, [waitInterval]);\n\n    return (\n        <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n            <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n        </LoadingOverlay>\n    );\n};\n\nexport default EmptyCartMessage;\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote walletbuttons-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div key={`skeleton-container-${i}`} />\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","const APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n    'googlepaystripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => SUPPORTED_METHODS.includes(methodId));\n}\n","import { lazy } from 'react';\n\nconst AmazonPayV2Button = lazy(() => import(/* webpackChunkName: \"amazon-pay-v2-button\" */'@bigcommerce/checkout/amazon-pay-v2-integration').then(module => ({ default: module.AmazonPayV2Button })));\nconst BigCommercePaymentsButton = lazy(() => import(/* webpackChunkName: \"big-commerce-payments-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigCommercePaymentsButton })));\nconst BigcommercePaymentsPayLaterButton = lazy(() => import(/* webpackChunkName: \"bigcommerce-payments-pay-later-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigcommercePaymentsPayLaterButton })));\nconst CheckoutButton = lazy(() => import(/* webpackChunkName: \"checkout-button\" */'@bigcommerce/checkout/checkout-button-integration').then(module => ({ default: module.CheckoutButton })));\nconst GooglePayButton = lazy(() => import(/* webpackChunkName: \"google-pay-button\" */'@bigcommerce/checkout/google-pay-integration').then(module => ({ default: module.GooglePayButton })));\nconst PayPalCommerceCreditButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-credit-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceCreditButton })));\nconst PayPalCommerceButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceButton })));\nconst StripeLinkV2Button = lazy(() => import(/* webpackChunkName: \"stripe-link-v2-button\" */'@bigcommerce/checkout/stripe-integration').then(module => ({ default: module.StripeLinkV2Button })));\n\nexport {\n  AmazonPayV2Button,\n  BigCommercePaymentsButton,\n  BigcommercePaymentsPayLaterButton,\n  CheckoutButton,\n  GooglePayButton,\n  PayPalCommerceCreditButton,\n  PayPalCommerceButton,\n  StripeLinkV2Button,\n};\n\nexport const ComponentRegistry = {\n  'AmazonPayV2Button': [\n    { \"id\": \"amazonpay\" }\n  ],\n  'BigCommercePaymentsButton': [\n    { \"id\": \"bigcommerce_payments\" }\n  ],\n  'BigcommercePaymentsPayLaterButton': [\n    { \"id\": \"bigcommerce_payments_paylater\" }\n  ],\n  'GooglePayButton': [\n    { \"id\": \"googlepayadyenv2\" },\n    { \"id\": \"googlepayadyenv3\" },\n    { \"id\": \"googlepayauthorizenet\" },\n    { \"id\": \"googlepaybnz\" },\n    { \"id\": \"googlepaybraintree\" },\n    { \"id\": \"googlepaypaypalcommerce\" },\n    { \"id\": \"googlepaycheckoutcom\" },\n    { \"id\": \"googlepaycybersourcev2\" },\n    { \"id\": \"googlepayorbital\" },\n    { \"id\": \"googlepaystripe\" },\n    { \"id\": \"googlepaystripeupe\" },\n    { \"id\": \"googlepayworldpayaccess\" },\n    { \"id\": \"googlepaytdonlinemart\" },\n    { \"id\": \"googlepaystripeocs\" }\n  ],\n  'PayPalCommerceButton': [\n    { \"id\": \"paypalcommerce\" }\n  ],\n  'PayPalCommerceCreditButton': [\n    { \"id\": \"paypalcommercecredit\" }\n  ],\n  'StripeLinkV2Button': [\n    { \"id\": \"stripeocs\" }\n  ]\n} as const;\n\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent, resolveLazyComponent } from '../common/resolver';\nimport * as checkoutButtons from '../generated/checkoutButtons';\nimport * as lazyCheckoutButtons from '../generated/checkoutButtons/lazy';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n    useLazyLoad: boolean,\n): ComponentType<CheckoutButtonProps> | undefined {\n    if (useLazyLoad) {\n        const { ComponentRegistry, ...components } = lazyCheckoutButtons;\n\n        return resolveLazyComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n            resolveId,\n            components,\n            ComponentRegistry,\n        );\n    }\n\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        checkoutButtons,\n    );\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent, lazy, Suspense } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\n\nconst ApplePayButton = lazy(() => import(/* webpackChunkName: \"apple-pay-button\" */'./customWalletButton/ApplePayButton'));\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return <Suspense>\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            </Suspense>;\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, Suspense } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext, WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\nimport { isExperimentEnabled } from '../common/utility';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { themeV2 } = useThemeContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const { getConfig } = checkoutState.data;\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton(\n            { id: methodId },\n            isExperimentEnabled(getConfig()?.checkoutSettings, 'CHECKOUT-9432.lazy_load_payment_components', false)\n        );\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <Suspense key={methodId}> \n            <ResolvedCheckoutButton\n                checkoutService={checkoutService}\n                checkoutState={checkoutState}\n                containerId={`${methodId}CheckoutButton`}\n                language={language}\n                methodId={methodId}\n                onUnhandledError={onUnhandledError}\n                onWalletButtonClick={onWalletButtonClick}\n            />\n        </Suspense>;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': themeV2,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({'sub-header': themeV2})}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.includes(methodId);\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => !SUPPORTED_METHODS.includes(payment.providerId),\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { isExperimentEnabled } from '../common/utility';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isRedirectExperimentEnabled: boolean;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    isRedirectExperimentEnabled,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isRedirectExperimentEnabled && shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': themeV2 },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={themeV2 ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isRedirectExperimentEnabled,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import {\n    CheckoutSelectors,\n    CheckoutService,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { LazyContainer } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\nimport { isExperimentEnabled } from '../common/utility';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\nexport interface CheckoutButtonListProps {\n    hideText?: boolean;\n    isInitializing?: boolean;\n    methodIds?: string[];\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onClick?(methodId: string): void;\n    onError?(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonListProps {\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n}\n\nconst CheckoutButtonList: FunctionComponent<WithCheckoutCheckoutButtonListProps & CheckoutButtonListProps> = ({\n    checkoutService,\n    checkoutState,\n    hideText = false,\n    isInitializing = false,\n    methodIds = [],\n    checkEmbeddedSupport,\n    deinitialize,\n    initialize,\n    onClick = noop,\n    onError,\n}) => {\n    const { language } = useLocale();\n    const supportedMethodIds = getSupportedMethodIds(methodIds);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    const { getConfig } = checkoutState.data;\n\n    const renderButtons = () => {\n        return supportedMethodIds.map((methodId) => {\n            const ResolvedCheckoutButton = resolveCheckoutButton(\n                { id: methodId },\n                isExperimentEnabled(getConfig()?.checkoutSettings, 'CHECKOUT-9432.lazy_load_payment_components', false)\n            );\n\n            if (!ResolvedCheckoutButton) {\n                return <CheckoutButtonV1Resolver\n                    deinitialize={deinitialize}\n                    initialize={initialize}\n                    isShowingWalletButtonsOnTop={false}\n                    key={methodId}\n                    methodId={methodId}\n                    onClick={onClick}\n                    onError={onClick}\n                />\n            }\n\n            return <LazyContainer key={methodId}>\n                <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onClick}\n                    onWalletButtonClick={onClick}\n                />\n            </LazyContainer>;\n        });\n    };\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {renderButtons()}\n            </div>\n        </>\n    );\n};\n\nfunction mapToCheckoutButtonListProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonListProps | null {\n    return {\n        checkoutService,\n        checkoutState,\n    };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonListProps)(CheckoutButtonList));\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { FormField } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField } from '@bigcommerce/checkout/ui';\nimport { Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\n\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const { themeV2 } = useThemeContext();\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                            themeV2={themeV2}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    className={themeV2 ? 'body-bold' : ''}\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className={classNames('button optimizedCheckout-buttonSecondary',\n                        { 'body-bold': themeV2 })}\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                themeV2={themeV2}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n            themeV2={themeV2}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const paymentMethod =\n        !!providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        isFastlaneHostWindow(window) &&\n        !!paymentMethod &&\n        !!paymentMethod.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if (shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            void fastlane\n                .FastlaneWatermarkComponent({\n                    includeAdditionalInfo: true,\n                })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className=\"paypalFastlaneWatermark-container\">\n                <div data-test=\"paypalFastlaneWatermark\" id=\"paypalFastlaneWatermark\" />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n};\n\nexport default PayPalFastlaneWatermark;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n        themeV2={themeV2}\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink themeV2={themeV2} url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <p className={themeV2 ? 'body-regular' : ''}>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent themeV2={themeV2} url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset themeV2={themeV2} url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <>\n            <Input\n                {...field}\n                checked={field.value}\n                className=\"form-checkbox\"\n                id={field.name}\n                testId=\"should-subscribe-checkbox\"\n                type=\"checkbox\"\n                value={String(field.value)}\n            />\n\n            <Label\n                additionalClassName={themeV2 ? 'body-regular' : ''}\n                htmlFor={field.name}\n            >\n                <TranslatedHtml\n                    id={\n                        requiresMarketingConsent\n                            ? 'customer.guest_marketing_consent'\n                            : 'customer.guest_subscribe_to_newsletter_text'\n                    }\n                />\n            </Label>\n        </>\n    );\n}\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { isExperimentEnabled } from '../common/utility';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    defaultShouldSubscribe,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n    setFieldValue,\n}) => {\n    const {\n        checkoutState: {\n            data: { getConfig }\n        }\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(config.checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth && isRedirectExperimentEnabled) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className={classNames('customerEmail-button', {\n                                'body-bold': themeV2,\n                            })}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className={classNames('customer-login-link',\n                        { 'body-regular': themeV2 })}\n                    >\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            themeV2={themeV2}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { Button, ButtonVariant, useThemeContext } from '@bigcommerce/checkout/ui';\nimport React from 'react';\n\ninterface RedirectToStorefrontLoginProps {\n    isDisabled: boolean;\n    isLoading: boolean;\n}\n\nexport const RedirectToStorefrontLogin: React.FC<RedirectToStorefrontLoginProps> = ({\n    isDisabled,\n    isLoading,\n}) => {\n    const { themeV2 } = useThemeContext();\n    const { checkoutState: { data: { getConfig } } } = useCheckout();\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    const { checkoutLink, loginLink } = config.links;\n\n    const handleRedirect = () => {\n        return window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n    }\n\n    return (\n        <Button\n            className={themeV2 ? 'body-bold' : ''}\n            disabled={isDisabled}\n            id=\"checkout-customer-continue\"\n            isLoading={isLoading}\n            onClick={handleRedirect}\n            testId=\"customer-continue-button\"\n            variant={ButtonVariant.Primary}\n        >\n            <TranslatedString id=\"customer.sign_in_action\" />\n        </Button>\n    );\n};\n","import classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\nimport { RedirectToStorefrontLogin } from './RedirectToStorefrontLogin';\n\nexport interface LoginFormProps {\n    isBuyNowCart: boolean;\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    isBuyNowCart,\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    shouldRedirectToStorefrontForAuth,\n    viewType = CustomerViewType.Login,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                {!shouldRedirectToStorefrontForAuth && <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />}\n\n                <p className={classNames('form-legend-container', { 'body-cta': themeV2 })}>\n                    <span>\n                        { isSignInEmailEnabled && !isBuyNowCart &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled && !shouldRedirectToStorefrontForAuth &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    {shouldRedirectToStorefrontForAuth ?\n                        <RedirectToStorefrontLogin\n                            isDisabled={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                            isLoading={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                        />\n                        :\n                        <Button\n                            className={themeV2 ? 'body-bold' : ''}\n                            disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                            testId=\"customer-continue-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>}\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { object } from 'yup';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    defaultShouldSubscribe,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status,\n    setFieldValue,\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        setFieldValue('email', email);\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            requiresMarketingConsent ? false : defaultShouldSubscribe,\n        );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n\n                return object({});\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isBuyNowCart: boolean;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        if (!isReady) {\n            return null;\n        }\n\n        return (\n            <>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isBuyNowCart,\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n            shouldRedirectToStorefrontForAuth,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId=\"customer.continue_as_guest_action\"\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isBuyNowCart={isBuyNowCart}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldRedirectToStorefrontForAuth={shouldRedirectToStorefrontForAuth}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n            shouldRedirectToStorefrontForAuth\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isBuyNowCart: cart.source === 'BUY_NOW',\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        shouldRedirectToStorefrontForAuth,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': themeV2 })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': themeV2 })}>\n                        <span className=\"address-line-1\">{address.address1}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': themeV2 })}>\n                        {address.city && <span className=\"locality\">{address.city}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={themeV2 ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n\n                <ConsignmentLineItemDetail isMultiShippingSummary lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': themeV2 && (isActive || isComplete) },\n                        { 'header-secondary': themeV2 && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            <div\n                className={classNames('stepHeader-body stepHeader-column optimizedCheckout-contentPrimary',\n                    { 'body-regular': themeV2 })}\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': themeV2 })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { ReactElement, ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nconst CheckoutStep = ({\n        children,\n        heading,\n        isActive,\n        isBusy,\n        isComplete,\n        isEditable,\n        onEdit,\n        suggestion,\n        summary,\n        type,\n        onExpanded = noop,\n    }: CheckoutStepProps): ReactElement => {\n    const [isClosed, setIsClosed] = useState(true);\n\n    const containerRef = useRef<HTMLLIElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const timeoutRef = useRef<number>();\n    const timeoutDelay = useRef<number>();\n\n    const getChildInput = (): HTMLElement | undefined => {\n        const container = containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    };\n\n    const getScrollPosition = (): number | undefined => {\n        const container = getParentContainer();\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    };\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    const getParentContainer = (): HTMLElement | undefined => {\n        let container: HTMLElement | null = containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return containerRef.current ? containerRef.current : undefined;\n    };\n\n    const getTransitionDelay = (): number => {\n        if (timeoutDelay.current !== undefined) {\n            return timeoutDelay.current;\n        }\n\n        timeoutDelay.current =\n            parseFloat(\n                contentRef.current\n                    ? getComputedStyle(contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return timeoutDelay.current;\n    };\n\n    const focusStep = (): void => {\n        const delay = isMobileView() ? 0 : getTransitionDelay();\n\n        setIsClosed(false);\n\n        timeoutRef.current = window.setTimeout(() => {\n            const input = getChildInput();\n            const position = getScrollPosition();\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            timeoutRef.current = undefined;\n        }, delay);\n    };\n\n    const handleTransitionEnd = (node: HTMLElement, done: () => void): void => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    const onAnimationEnd = useCallback((): void => {\n        if (!isActive) {\n            setIsClosed(true);\n        }\n    }, [isActive]);\n\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current) {\n                window.clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isActive) {\n            focusStep();\n        }\n    }, [isActive]);\n\n    return (\n        <li\n            className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                [`checkout-step--${type}`]: !!type,\n            })}\n            ref={containerRef}\n        >\n            <div className=\"checkout-view-header\">\n                <CheckoutStepHeader\n                    heading={heading}\n                    isActive={isActive}\n                    isComplete={isComplete}\n                    isEditable={isEditable}\n                    onEdit={onEdit}\n                    summary={summary}\n                    type={type}\n                />\n            </div>\n\n            {suggestion && isClosed && !isActive && (\n                <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                    {suggestion}\n                </div>\n            )}\n\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={onAnimationEnd}\n                        timeout={{}}\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        </li>\n    );\n};\n\nexport default CheckoutStep;\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutPayment, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    CheckoutStoreSelector,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n    RequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport {\n    AddressFormSkeleton,\n    CartSummarySkeleton,\n    ChecklistSkeleton,\n    LazyContainer,\n    LoadingNotification,\n    OrderConfirmationPageSkeleton\n} from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n                ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n                ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n                ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n                ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n                ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    data?: CheckoutStoreSelector;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    themeV2?:boolean;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    data: CheckoutStoreSelector;\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            containerId,\n            createEmbeddedMessenger,\n            data,\n            embeddedStylesheet,\n            extensionService,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            if (document.prerendering) {\n                document.addEventListener('prerenderingchange', () => {\n                    analyticsTracker.checkoutBegin();\n                }, { once: true });\n            }\n            else {\n                analyticsTracker.checkoutBegin();\n            }\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n            this.handleReady();\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isRedirecting } = this.state;\n        const { themeV2 } = this.props;\n\n        if(isRedirecting){\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() }, { 'themeV2': themeV2 })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n                {this.renderCartSummary()}\n            </>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        const setIsMultishippingMode = (value: boolean) => {\n            this.setState({ isMultiShippingMode: value });\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        setIsMultishippingMode={setIsMultishippingMode}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                    <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                    <Extension region={ExtensionRegion.SummaryAfter} />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            // TODO: setting activeStepType here is causing significant delay in rendering guest shopper form\n            // When converting functional component, we should set activeStepType before rendering <CheckoutPage />\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n            findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        data,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: getCheckoutStepStatuses(checkoutState),\n    };\n}\n","import { useEffect, useState } from 'react';\n\nimport { useExtensions } from '@bigcommerce/checkout/checkout-extension';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nexport const useLoadCheckout = (checkoutId: string): {isLoadingCheckout: boolean} => {\n    const [ isLoadingCheckout, setIsLoadingCheckout ] = useState(true);\n    const { checkoutService } = useCheckout();\n    const { extensionService } = useExtensions();\n\n    const fetchData = async () => {\n        await Promise.all([\n            checkoutService.loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }),\n            extensionService.loadExtensions(),\n        ]);\n    };\n\n    const fetchDataWithRetry = async (maxRetries = 3): Promise<void> => {\n        const attemptFetch = async (attemptSequence = 1): Promise<void> => {\n            try {\n                await fetchData();\n            } catch {\n                if (attemptSequence >= maxRetries) {\n                    throw new Error('Failed to load checkout after 3 attempts, please try again.');\n                }\n\n                const delay = attemptSequence ** 2 * 1000;\n\n                await new Promise(resolve => setTimeout(resolve, delay));\n\n                await attemptFetch(attemptSequence + 1);\n            }\n        };\n\n        await attemptFetch();\n    };\n\n    useEffect(() => {\n        fetchDataWithRetry()\n            .then(() => setIsLoadingCheckout(false))\n            .catch((error) => {\n                throw error;\n            });\n    }, []);\n\n    return  { isLoadingCheckout };\n};\n","import CheckoutIntermediate from './CheckoutIntermediate';\n\nexport default CheckoutIntermediate;\nexport { CheckoutProps, CheckoutState, WithCheckoutProps } from './CheckoutPage';\n","import {\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { CheckoutPageSkeleton, useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { EmbeddedCheckoutStylesheet } from '../embeddedCheckout';\n\nimport CheckoutPage from './CheckoutPage';\nimport CheckoutSupport from './CheckoutSupport';\nimport { useLoadCheckout } from './hooks';\n\ninterface CheckoutIntermediateProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nconst CheckoutIntermediate:React.FC<CheckoutIntermediateProps>= (props) => {\n    const { checkoutId } = props;\n    const { isLoadingCheckout } = useLoadCheckout(checkoutId);\n    const { themeV2 } = useThemeContext();\n\n    if (isLoadingCheckout) {\n        return <CheckoutPageSkeleton />;\n    }\n\n    return <CheckoutPage\n            {...props}\n            createEmbeddedMessenger={props.createEmbeddedMessenger}\n            embeddedStylesheet={props.embeddedStylesheet}\n            embeddedSupport={props.embeddedSupport}\n            errorLogger={props.errorLogger}\n            themeV2={themeV2}\n        />;\n};\n\nexport default CheckoutIntermediate;\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { ReactElement, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst CheckoutApp = (props: CheckoutAppProps): ReactElement => {\n    const { containerId, sentryConfig, publicPath, sentrySampleRate } = props;\n\n    const checkoutService = useMemo(() => createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    }), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const embeddedSupport = useMemo(() => createEmbeddedCheckoutSupport(getLanguageService()), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n        { sentry: sentryConfig },\n        {\n            errorTypes: ['UnrecoverableError'],\n            publicPath,\n            sampleRate: sentrySampleRate || 0.1,\n        },\n    ), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    return (\n        <ErrorBoundary logger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider\n                            checkoutService={checkoutService}\n                            errorLogger={createErrorLogger()}\n                        >\n                            <ThemeProvider>\n                                <Checkout\n                                    {...props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    embeddedSupport={embeddedSupport}\n                                    errorLogger={errorLogger}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default CheckoutApp;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigCommercePaymentsButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigCommercePaymentsButton,\n    [{ id: 'bigcommerce_payments' }],\n);\n","import React, { ReactNode } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport ThemeContext from './ThemeContext';\n\nexport interface ThemeProviderProps {\n    children?: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let useNewTheme = false;\n\n    if (config) {\n        useNewTheme = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    const themeV2 =\n        (window.location.search && window.location.search.includes('v2')) || useNewTheme;\n\n    return <ThemeContext.Provider value={{ themeV2 }}>{children}</ThemeContext.Provider>;\n};\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n    fallbackValue = true\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? fallbackValue);\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    PaymentPaymentMethodListBefore = 'extension-region-payment-paymentmethodlist-before',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> =\n    {\n        [ExtensionRegion.ShippingShippingAddressFormBefore]:\n            ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n        [ExtensionRegion.ShippingShippingAddressFormAfter]:\n            ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n        [ExtensionRegion.ShippingSelectedShippingMethod]:\n            ExtensionRegionContainer.ShippingSelectedShippingMethod,\n        [ExtensionRegion.PaymentPaymentMethodListBefore]:\n            ExtensionRegionContainer.PaymentPaymentMethodListBefore,\n        [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n        [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n        [ExtensionRegion.GlobalWebWorker]: '',\n    };\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: unknown): void;\n}\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            field: { value },\n            onChange = noop,\n        } = this.props;\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return render(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component, field);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n        return createElement(component as any, this.props);\n    }\n}\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={form.getFieldMeta(field.name)}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\nexport default memo(BasicFormField);\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import React, { FunctionComponent } from 'react';\n\nexport const CartSummarySkeleton: FunctionComponent = () => (\n    <aside className=\"layout-cart\">\n        <article className=\"cart optimizedCheckout-orderSummary checkout-page-skeleton checkout-page-skeleton--cart\">\n            <div className=\"item--first\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n            </div>\n            <div className=\"item--product\">\n                <div className=\"figure\" />\n                <div className=\"name\" />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--coupon\">\n                <div />\n            </div>\n            <div className=\"item--total\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--tax\">\n                <div />\n            </div>\n            <div className=\"item--last\">\n                <div />\n                <div />\n            </div>\n        </article>\n    </aside>\n);\n"],"names":["children","className","hidden","testId","isFloatingLabelEnabled","additionalClassName","rest","IconSize","withIconContainer","OriginalComponent","memo","size","Small","Large","Medium","A","displayNamePrefix","hasSelectedShippingOptions","consignments","length","every","consignment","selectedShippingOption","id","type","CustomError","Error","constructor","data","message","title","name","super","captureStackTrace","this","stack","setDefaultValues","defaultError","defaultTitle","ref","useRef","containerRef","createRef","focusOnError","current","erroredFormField","querySelector","join","focus","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","useCallback","memoizeOne","setSubmitted","setTimeout","renderContent","noValidate","onSubmitCapture","values","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","mapCustomFormFieldsFromFormValues","customFieldsObject","customFields","forIn","value","key","fieldValue","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","push","fieldId","ErrorLevelType","height","role","viewBox","width","xmlns","d","fill","ErrorBoundary","Component","state","getDerivedStateFromError","error","componentDidCatch","filter","logger","props","log","errorCode","render","fallback","FormContext","createContext","isSubmitted","FormProvider","initialIsSubmitted","useState","contextValue","useMemo","Provider","isFunction","hasUnassignedLineItems","lineItems","reduce","total","lineItemIds","physicalItems","item","addedByPromotion","forwardRef","appearFocused","themeV2","memoize","formFields","translate","custom","schema","label","required","fieldType","min","max","maxValue","minValue","nullable","transform","originalValue","isNaN","undefined","CHECKBOX","requiredErrorMessage","query","isMobileView","matchMedia","matches","additionalInitializationOptions","onComplete","onError","onUnhandledError","AlertType","icon","describedBy","useId","Info","Success","Warning","IconError","renderDefaultIcon","placeholder","includes","getProviderWithCustomCheckout","methodId","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","description","Toggle","openByDefault","isOpen","toggle","onClick","preventDefault","TranslatedString","displayAdditionalInformation","method","shippingCostAfterDiscount","imageUrl","alt","src","transitTime","additionalDescription","cost","ShopperCurrency","amount","isBuyNowCart","cart","lastPathName","split","pop","params","URLSearchParams","search","source","get","currency","toCustomerCurrency","isLoading","rows","content","i","skeleton","findLineItems","compact","map","itemId","find","isNil","parentId","renderWhileLoading","createInjectHoc","LocaleContext","pickProps","ReactDatePicker","lazy","onChange","options","date","inputDateFormat","inputFormat","handleDateChange","dateValue","event","target","DynamicFormFieldType","DROPDOWM","optionValue","RADIO","RadioInput","checked","CheckboxInput","Array","isArray","DATE","Suspense","autoComplete","calendarClassName","dateFormat","maxDate","Date","minDate","placeholderText","toUpperCase","popperClassName","selected","MULTILINE","TextInput","PASSWORD","toResolvableComponent","resolveIds","Object","assign","ContextComponent","InnerDecoratedComponent","DecoratedComponent","context","useContext","injectedProps","pickBy","isEmpty","mergedProps","displayName","isCustomError","customError","mapAddressToFormValues","fields","address","addressFormValues","default","defaultValue","fieldName","field","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","getDefaultValue","year","month","day","Number","labelContent","footer","input","renderField","htmlFor","errorId","kebabCase","ConsoleErrorLogger","console","customConsole","tags","level","meta","info","warn","NoopErrorLogger","FILENAME_PREFIX","SeverityLevelEnum","SentryErrorLogger","config","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","publicPath","filename","RegExp","consoleLogger","sampleRate","dsn","sentryOnLoad","Sentry","init","beforeSend","bind","denyUrls","integrations","globalHandlersIntegration","onerror","onunhandledrejection","rewriteFramesIntegration","lazyLoadIntegration","addIntegration","iteratee","payload","loadSentry","then","computeErrorCode","captureException","mapToSentryLevel","extra","fingerprint","loaderPromise","exec","getScriptLoader","loadScript","attributes","crossorigin","async","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","createErrorLogger","serviceConfig","sentry","AccountService","requestSender","createRequestSender","create","body","put","response","customer","minLength","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","FormField","withLanguage","mapPropsToValues","password","confirmPassword","handleSubmit","onSignUp","validationSchema","language","passwordRequirements","numeric","alpha","oneOf","isSigningUp","customerCanBeCreated","Fieldset","legend","Legend","Form","Button","variant","Primary","Alert","AccountCreationRequirementsError","requirements","getLanguageService","prototype","AccountCreationFailedError","isDefaultOrderPayment","payment","isGiftCertificatePayment","isStoreCreditPayment","order","gatewayPayment","payments","detail","instructions","mapFromPayments","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","isShippingDiscountDisplayEnabled","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","providerId","keys","entries","index","PaymentsWithMandates","paymentsWithMandates","mandate","href","rel","isPaymentWithMandate","OrderStatusMessage","orderNumber","orderStatus","supportEmail","supportPhoneNumber","TranslatedHtml","checkoutSettings","features","status","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","retry","OrderSummaryDrawer","OrderConfirmation","handleErrorModalClose","setState","handleSignUp","createAccount","shopperConfig","hasSignedUp","catch","handleUnhandledError","errorLogger","embeddedMessenger","postError","componentDidMount","containerId","createEmbeddedMessenger","embeddedStylesheet","loadOrder","analyticsTracker","links","siteLink","getConfig","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","orderPurchased","isLoadingOrder","OrderConfirmationPageSkeleton","paymentInstructions","storeProfile","orderEmail","storePhoneNumber","isEmbedded","billingAddress","firstName","dangerouslySetInnerHTML","__html","sanitize","renderGuestSignUp","shouldShowPasswordForm","customerId","action","Secondary","renderOrderSummary","renderErrorModal","getPasswordRequirements","shopperCurrency","isExperimentEnabled","MobileView","matched","LazyContainer","loadingSkeleton","headerLink","storeCurrency","orderAmount","CartSummarySkeleton","ErrorModal","onClose","shouldShowErrorCode","withAnalytics","withCheckout","checkoutState","getOrder","statuses","checkoutService","OrderConfirmationApp","accountService","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","newsletter","sentryConfig","errorTypes","sentrySampleRate","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","ThemeProvider","createEmbeddedCheckoutMessenger","setCheckoutState","getState","unsubscribeRef","useEffect","subscribe","newCheckoutState","getPasswordRequirementsFromConfig","minlength","allSlashes","LoadingSkeleton","shouldShowChildren","Boolean","style","position","left","top","getShippingCostAfterAutomaticDiscount","discountTotal","DEFAULT_OPTIONS","count","interval","fn","resolve","PaymentMethodId","InnerField","component","form","InnerFieldInput","hasError","errors","prevForm","prevField","prevProps","nextForm","nextField","nextProps","componentDidUpdate","getTime","createElement","renderInnerField","renderMessage","Consumer","handleOnRequestClose","nativeEvent","renderErrorCode","isRequestError","headers","Modal","additionalModalClassName","aria","labelledby","header","ModalHeader","onRequestClose","shouldBeTranslatedAsHtml","isHtmlError","translationKey","isValidAddress","isValidSync","WHITELIST_REGEXP","maxLength","trim","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","requiredFieldErrorTranslationIds","countryCode","lastName","company","address1","address2","city","postalCode","phone","getFormFieldsValidationSchema","beautifyAmazonButton","document","container","amazonButton","shadowRoot","HTMLElement","CheckoutButton","loadingContainerId","gatewayId","disabled","getPaymentProviderCustomer","paymentWithCustomCheckout","providerWithCustomCheckout","isPayPalFastlaneEnabled","paymentProviderCustomer","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","paypalFastlaneAddresses","addresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","CheckoutContext","useCheckout","isResolvableComponent","resolveComponent","components","results","_","resolverId","result","sort","a","b","queries","mobile","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","forEach","val","handleSelectNone","handleInputChange","indexOf","FormFieldContainer","DynamicInput","FormFieldError","renderProps","pick","secret","fieldLabel","parentFieldName","inputId","autocomplete","extraClass","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","labelClassName","Label","dynamicFormFieldType","NUMBER","TELEPHONE","TEXT","renderInput","items","helperLabel","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","setIsOpen","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","Tiny","normalizeAddress","omit","some","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","getNestedValue","obj","path","acc","formikContext","touched","ADD_ATTR","EmbeddedCheckoutUnsupportedError","object","setPrototypeOf","hasProto","__proto__","methods","checkoutButtonContainerClass","translatedString","parsedString","toCSSRule","selector","mergedStyles","EmbeddedCheckoutStyleParser","parse","rules","text","secondaryText","heading","secondaryHeading","link","hover","button","active","secondaryButton","select","checkbox","radio","step","checklist","discountBanner","loadingBanner","orderSummary","EmbeddedCheckoutStylesheet","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","resolveLazyComponent","registry","matchedName","quantity","createAnalyticsService","createFn","createArguments","getStepTracker","createStepTracker","getBodlService","createBodlService","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","isShowingWalletButtonsOnTop","deinitialize","initialize","heightOption","buttonHeight","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","loadCheckout","getCheckout","include","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createReRenderShippingStepHandler","ReRenderShippingStep","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","postMessageToExtension","ExtensionService","handlers","loadExtensions","preloadExtensions","extensions","getExtensions","cartId","getCart","URL","searchParams","set","as","renderExtension","region","getExtensionByRegion","registerHandlers","extensionId","removeListeners","clearExtensionCache","removers","remover","isRegionEnabled","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","extensionState","useReducer","extensionValues","extensionService","ExtensionContext","isPayPalFastlaneCustomer","filterError","LoadingSpinner","getAppliedStyles","element","properties","pseudoElementSelector","declaration","getComputedStyle","propertyName","getPropertyValue","useExtensions","extensionContext","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","AddressType","deinitializeCustomer","initializeCustomer","onWalletButtonClick","OrderConfirmationPageSkeletonDesktop","OrderConfirmationPageSkeletonMobile","MOBILE_MAX_WIDTH","countries","country","states","subdivisions","localizedCountry","localizedProvince","hideContentWhenLoading","unmountContentWhenLoading","loadingUI","display","ThemeContext","useThemeContext","themeContext","getBillingAddressFields","checkout","showPayPalFastlaneLabel","Billing","getBillingCountries","getShippingCountries","addressWithoutLocalization","localizeAddress","useLocale","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","EMPTY_ARRAY","freeze","getLineItemsCount","renderItemContent","isMultiShippingSummary","option","renderProductOptionDetails","SMALL_SCREEN_MAX_WIDTH","currentScript","configurePublicPath","scriptPath","slice","substr","renderCheckout","configuredPublicPath","CheckoutApp","getElementById","renderOrderConfirmation","FALLBACK_LOCALE","languageService","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","checkoutUserExperienceSettings","floatingLabelEnabled","NoopCheckoutSupport","isSupported","EmbeddedCheckoutSupport","unsupportedMethods","langService","ids","UNSUPPORTED_METHODS","CheckoutPageSkeletonDesktop","CheckoutPageSkeletonMobile","waitInterval","loginUrl","isWaiting","setIsWaiting","waitToken","clearTimeout","LoadingOverlay","CustomerViewType","buttonsCount","_v","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","module","AmazonPayV2Button","BigCommercePaymentsButton","BigcommercePaymentsPayLaterButton","GooglePayButton","PayPalCommerceCreditButton","PayPalCommerceButton","StripeLinkV2Button","ComponentRegistry","resolveCheckoutButton","resolveId","useLazyLoad","ApplePayButton","paypalCommerceIds","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","providers","remoteCheckoutProviders","availableMethodIds","isGuest","checkEmbeddedSupport","isPaymentStepActive","isPayPalCommerce","ResolvedCheckoutButton","analyticsContext","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","stopPropagation","provider","providerFlow","IconBolt","handleExecutePaymentMethodCheckout","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","getBillingAddress","isSigningOut","checkoutLink","logoutLink","isRedirectExperimentEnabled","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","hideText","isInitializing","supportedMethodIds","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","onSubmit","acceptsMarketingEmails","getCreateCustomerValidationSchema","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","createAccountErrorMessage","splitMessage","updatedItems","transformFormFieldsData","DynamicFormField","onSendLoginEmail","isSendingEmail","emailHasBeenRequested","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","sent_email","TranslatedLink","expiry","minutes","Math","round","additionalBodyClassName","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","isExpressPrivacyPolicy","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","Input","String","SubscribeSessionStorage","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","onContinueAsGuest","privacyPolicyUrl","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","setFieldValue","fieldProps","loginLink","BasicFormField","tabIndex","RedirectToStorefrontLogin","isDisabled","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","mapErrorMessage","SuggestedLogin","CancellableEnforcedLogin","EnforcedLogin","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","getStylesFromElement","parentContainer","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","Customer","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","onAccountCreated","mapCreateAccountFromFormValues","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","componentWillUnmount","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isGuestEnabled","isAccountCreationEnabled","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","promotions","banners","promotion","banner","compactView","usePayPalFastlaneAddress","shippingAddress","showPayPalFastlaneAddressLabel","StaticAddress","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","consignmentNumber","ConsignmentLineItemDetail","isMultiShippingMode","ShippingOptionExpiredError","isActive","isEditable","onEdit","summary","isBusy","suggestion","onExpanded","isClosed","setIsClosed","contentRef","timeoutRef","timeoutDelay","getParentContainer","parentElement","classList","contains","focusStep","delay","parseFloat","transitionDuration","getChildInput","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","getScrollPosition","scrollTo","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","CheckoutStepType","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","getConsignments","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","steps","defaultActiveStep","isPrevStepComplete","prevStep","CartSummary","CartSummaryDrawer","Checkout","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","loadPaymentMethodByIds","subscribeToConsignments","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","postLoaded","prerendering","once","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","isUsingMultiShipping","errorModal","isPending","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","setIsMultishippingMode","StaticBillingAddress","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","Extension","withExtension","submitOrderError","getSubmitOrderError","walletButtonsOnTop","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","useLoadCheckout","checkoutId","setIsLoadingCheckout","fetchDataWithRetry","maxRetries","attemptFetch","attemptSequence","all","CheckoutPage","createEmbeddedCheckoutSupport","useNewTheme","experimentName","fallbackValue","call","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","PaymentPaymentMethodListBefore","SummaryAfter","SummaryLastItemAfter","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","getContextValue","createCurrencyService","unsubscribe","getFieldMeta"],"sourceRoot":""}